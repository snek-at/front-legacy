{"version":3,"sources":["components/molecules/TabContainer/index.jsx","components/molecules/Avatar/index.jsx","components/molecules/Socialdata/index.jsx","components/helpers/changeHue.js","components/molecules/Calendar2D/index.jsx","components/molecules/Calendar3D/index.jsx","components/molecules/LanguageChart/index.jsx","components/molecules/Navbar/index.jsx","components/molecules/Footer/index.jsx","components/molecules/TextTypist/index.jsx","components/molecules/SearchBar/index.jsx","components/pages/Redirect/index.jsx","components/molecules/ContribChart/index.jsx","components/pages/Settings/index.jsx","components/organisms/tabs/Projects/index.jsx","components/organisms/tabs/Resume/index.jsx","components/organisms/tabs/Overview/index.jsx","components/organisms/tabs/Education/index.jsx","components/pages/Profile/index.jsx","intel/Database/index.js","intel/Database/Statements/Create/index.js","intel/Database/Statements/Insert/index.js","intel/utils/UtilsGitlab/index.js","intel/utils/UtilsWebscrap/index.js","intel/utils/UtilsApollo/index.js","intel/Database/Statements/Update/index.js","intel/utils/UtilsGithub/GqlData/index.js","intel/utils/UtilsGithub/Translator/index.js","intel/utils/UtilsGithub/index.js","intel/IntelData/index.js","intel/Database/Statements/Select/index.js","intel/Database/Converter/index.js","intel/index.js","intel/OAuthGithub/providers/github.ts","intel/OAuthGithub/services/utilities.js","intel/AuthGitLab/providers/gitlab.ts","components/organisms/sections/Register/index.jsx","components/organisms/sections/Login/index.jsx","components/pages/Landing/index.jsx","components/pages/GitLab/index.jsx","Routes.js","App.js","registerServiceWorker.js","index.js"],"names":["TabContainer","state","activeItemInnerPills","activeSubItem","activeHorizontalItem","toggleOuterPills","tab","e","_this","setState","toggleSub","toggleHorizontal","_this2","this","props","vertical","react_default","a","createElement","mdbreact_esm","id","md","pills","color","className","settings","map","setting","key","to","active","onClick","icon","title","activeItem","Fragment","tabId","subtitles","subtitle","subkey","role","horizontal","items","item","visible","notification","pill","children","React","Component","Avatar","src","url","alt","Socialdata","_this$props","status","name","company","location","email","website","platforms","accounts","organisations","platformsJoined","github","gitlab","bitbucket","platform","i","message","dangerouslySetInnerHTML","__html","href","target","rel","fab","size","avatarUrl","molecules_LanguageChart","languages","changeHue","rgb","degree","hsl","replace","length","r","parseInt","substr","g","b","cMax","Math","max","cMin","min","delta","l","h","s","abs","rgbToHSL","c","x","m","normalizeRGBValue","toString","slice","rgbToHex","hslToRGB","floor","months","Calender2D","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","updateDimensions","width","myInput","current","offsetWidth","componentDidMount","window","addEventListener","contributions","calendar","currentYear","contributionsList","countContribs","cycleHue","hue","totalContributions","getEachMonth","pos","month","Array","Date","getMonth","createRef","removeEventListener","ref","height","weeks","week","wkey","contributionDays","day","dkey","y","data-data","date","data-count","total","fill","Calender3D","renderIsometrics","obelisk","require","point","Point","pixelView","PixelView","context","maxCount","values","wi","di","cubeHeight","CubeColor","getByHorizontalColor","dimension","CubeDimension","p3d","Point3D","cube","Cube","renderObject","countTotal","averageCount","datesTotal","dateBest","contribData","contrib","contributionCalendar","average","moment","fromDate","format","toDate","busiestDay","concat","streakLongest","datesLongest","streakCurrent","datesCurrent","longestStreak","startDate","endDate","currentStreak","renderTopStats","renderBottomStats","LanguageChart","dataPolar","datasets","data","backgroundColor","label","labels","slices","colors","language","push","share","es","options","legend","display","Navbar","isOpen","toggleCollapse","logout","localStorage","removeItem","console","log","dark","expand","navbar","molecules_SearchBar","left","logged","right","pageLogin","pathname","changeState","withRouter","Footer","react_router_dom","fluid","getFullYear","aria-hidden","TextTypist","scope","onTypingDone","dist_Typist_default","cursor","show","blink","element","Delay","ms","text","Backspace","count","delay","SearchBar","search","handleChange","defineProperty","value","outline","maxLength","type","onChange","placeholder","aria-label","Redirect","getRedirect","_callee","requestKey","regenerator_default","wrap","_context","prev","next","setItem","close","stop","Settings","molecules_TabContainer","Projects","getBadge","response","fetch","sent","ok","includes","repos","repo","undefined","owner","login","languagePie","style","Overview","Calendar3D","Calendar2D","Education","Dashboard","setTabItems","globalStore","projectcount","tabitems","react_router","testimonial","molecules_Avatar","user","molecules_Socialdata","statusEmojiHTML","websiteUrl","orgs","tabs_Overview","contribCalendar","contribTypes","tabs_Projects","tabs_Education","alasql","initTables","db","organization","member","repository","statistic","platformHasOrganization","platformHasRepository","proxy","fetchJson","urlIn","headers","Accept","X-Requested-With","then","res","json","fetchHtml","parseJsonToDOM","parser","DOMParser","parseFromString","html","parseTextToDOM","prototype","getWeekNumber","d","UTC","getDate","dayNum","getUTCDay","setUTCDate","getUTCDate","yearStart","getUTCFullYear","ceil","LINK","cache","fillPlatform","_ref","asyncToGenerator","mark","coverDesc","fullName","createdAt","server","username","webscrap","getElementsByTagName","getElementsByClassName","getAttribute","innerHTML","trim","substring","exec","insert","source","_x","apply","arguments","fillOrganizations","_ref2","_callee2","rows","_i","_Array$from","_org","orgUrl","idPlatform","idOrganization","_context2","from","pop","_x2","fillContribution","datetime","nameWithOwner","repoUrl","ownerId","languagePieId","repoExists","platformId","repositoryId","fillRepositories","calendarId","fillCalendar","_ref3","_callee3","activities","_i2","_Array$from2","weekday","statYear","year","_context3","getDay","_x3","_db","_callee4","_context4","t0","t1","abrupt","init","apiLink","authorization","fragmentMatcher","IntrospectionFragmentMatcher","introspectionQueryResultData","__schema","types","InMemoryCache","HttpLink","uri","ApolloClient","link","GET_PROFILE","gql","_templateObject","getCalendar","_templateObject3","createdAtDate","fromYear","toYear","query","toJSON","setFullYear","generateCalendarsQuery","streak","streakStart","streakTotal","fillOrganization","objUser","profile","organizations","edges","forEach","node","nodes","orgId","organizationId","membersWithRole","_member","memberAvatarUrl","memberName","memberWebUrl","memberUsername","memberId","fillStats","years","days","getYearsDict","keys","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","entries","Symbol","iterator","done","slicedToArray","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_ref6","_ref5","err","return","getDaysArray","filter","str","match","yearObj","yearNum","dayTotal","contributionCount","dayDate","statisticId","getTime","fillRepoOwner","_repo","repoOwnerUsername","repoOwnerAvatarUrl","repoOwnerName","repoOwnerUrl","repoOwnerId","openGraphImageUrl","pieId","repoId","fillRepository","fillPie","reposi","languagesCount","totalCount","languagesSize","totalSize","_edge","nodeName","nodeSize","nodeColor","fillLanguageSlice","octoCats","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_ref9","_ref8","w","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_ref12","_ref11","split","addOctocat","cat","contribs","dDay","index","repoNameWithOwner","additions","deletions","changedFiles","fillDB","statusMessage","emojiHTML","commitContributionsByRepository","fillRepos","_fill","getPlatform","client","resProfile","resCalendar","allReposWithHistory","reposPerName","token","apollo","gqlData","variables","defaultBranchRef","history","translator","_x4","dbName","Database","statement","intel_IntelData_fill","totalLanguageSize","baseYearOfPlatforms","contribPerPlatform","formatDate","toISOString","getCalendarFromDates","fullDays","indexW","indexD","generateCalendarGrid","flag","emptyContributionYear","setDate","calculateColorsForCalendarDay","calendarYear","_week","_day","precision","dictCalendarToArray","dict","obj","JSON","parse","stringify","src_intel_fill","userList","retry","_retry","_user","maxRetries","fn","params","toConsumableArray","catch","Error","select","isEmployee","isHireable","p","platformName","converter","_unused","repositories","repoWithExtras","rId","rName","oAvatarUrl","rUrl","oName","oUsername","oUrl","lSize","lTotal","members","memberCount","mId","mName","mUsername","mAvatarUrl","mUrl","projectsUrl","sId","sName","sColor","sSize","_unused2","orgWithMember","oId","org","oid","_unused3","num","pie","languageSlice","round","_unused4","baseYear","calendarGrid","today","indexY","cYear","cWeek","cWeekday","cColor","nowYear","lastYear","nowDate","reverse","currentCalendar","_Object$entries","k","v","_unused5","stats","totalContributionsPerYear","bDays","elem","statistics","stat","sYear","stId","stsDate","steDate","stTotal","streaks","dateDiff","date1","date2","streakDiff","_unused6","contribPerPlatforms","pName","pId","cType","_unused7","client_secret","random","guid","redirect_uri","encodeURIComponent","githubProvider","buildAuthorizeUrl","extractError","redirectUrl","errorMatch","errorReason","errorDescriptionMatch","errorDescription","extractSession","_extractSession","code","codeMatch","stateMatch","AuthorizeUrl","Access-Allow-Credentials","Access-Control-Allow-Methods","Access-Control-Allow-Origin","Content-Type","Vary","method","access_token","gitlabProvider","usernameMatch","serverMatch","CREATE_USER_MUTATION","Register_templateObject","Register","password","password1","oAuthGitHubButton","oAuthGitHubData","AuthGitLabButton","sourceList","customUsername","usernames","addToUsernames","changeHandler","connectGitHub","RSA","acquireTokenAsync","pushToSourceList","connectGitLab","removeSource","handleUserNamePick","handleSubmit","intel","sources","sha256","platform_data","register","result","notify","error","toast","success","warn","hideProgressBar","newestOnTop","autoClose","placement","floating","disabled","social","domElement","clickable","popover","tag","checked","password2","compose","graphql","LOGIN_USER","Login_templateObject","Login","tokenAuth","loginHandler","withApollo","Landing","logMeIn","loaded","molecules_TextTypist","sections_Login","sections_Register","GitLab","open","Routes","exact","path","component","pages_Landing","assign","SettingsPage","Profile","RedirectPage","GitLabPage","render","VERIFY_TOKEN","App_templateObject","LOGIN_REAL_USER","App_templateObject2","REFRESH_TOKEN","App_templateObject3","_templateObject4","App","getItem","_verifyToken","setInterval","_loginUser","verify","verifyToken","_isLogged","payload","exp","origIat","_setLogged","orig","now","_refeshToken","refresh","_ref4","refreshToken","handleChangeState","handleLogin","registrationData","plattform_data_Temp","sources_Temp","molecules_Navbar","src_Routes","molecules_Footer","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","httpLink","createHttpLink","ReactDOM","react_common_esm","src_App","document","getElementById","URL","process","origin","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.320d7913.chunk.js","sourcesContent":["//> React\r\n// Contains all the functionality necessary to define React components\r\nimport React from \"react\";\r\n\r\n//> MDB\r\n// \"Material Design for Bootstrap\" is a great UI design framework\r\nimport {\r\n  MDBTabPane,\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBNav,\r\n  MDBNavItem,\r\n  MDBNavLink,\r\n  MDBIcon,\r\n  MDBTabContent,\r\n  MDBBadge\r\n} from \"mdbreact\";\r\n\r\n//> CSS\r\nimport \"./tabcontainer.scss\";\r\n\r\nclass TabContainer extends React.Component {\r\n  state = {\r\n    activeItemInnerPills: 0,\r\n    activeSubItem: 0,\r\n    activeHorizontalItem: 0\r\n  };\r\n\r\n  toggleOuterPills = (tab) => (e) => {\r\n    if (this.state.activeItemInnerPills !== tab) {\r\n      this.setState({\r\n        activeItemInnerPills: tab\r\n      });\r\n    }\r\n  };\r\n\r\n  toggleSub = (tab) => (e) => {\r\n    if (this.state.activeSubItem !== tab) {\r\n      this.setState({\r\n        activeSubItem: tab\r\n      });\r\n    }\r\n  };\r\n\r\n  toggleHorizontal = (tab) => (e) => {\r\n    if (this.state.activeHorizontalItem !== tab) {\r\n      this.setState({\r\n        activeHorizontalItem: tab\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (this.props.vertical) {\r\n      return (\r\n        <MDBRow id=\"tabcontainer\">\r\n          <MDBCol md=\"3\">\r\n            <MDBNav pills color=\"primary\" className=\"flex-column\">\r\n              {this.props.settings.map((setting, key) => {\r\n                return (\r\n                  <MDBNavItem key={key}>\r\n                    <MDBNavLink\r\n                      to=\"#\"\r\n                      active={this.state.activeItemInnerPills === key}\r\n                      onClick={this.toggleOuterPills(key)}\r\n                      className=\"text-left\"\r\n                    >\r\n                      <MDBIcon icon={setting.icon} className=\"mr-2\" />{\" \"}\r\n                      {setting.title}\r\n                    </MDBNavLink>\r\n                  </MDBNavItem>\r\n                );\r\n              })}\r\n            </MDBNav>\r\n          </MDBCol>\r\n          <MDBCol md=\"9\">\r\n            <MDBTabContent activeItem={this.state.activeItemInnerPills}>\r\n              {this.props.settings &&\r\n                this.props.settings.map((setting, key) => {\r\n                  return (\r\n                    <>\r\n                      <MDBTabPane tabId={key} key={key}>\r\n                        <MDBNav className=\"nav-tabs mt-5\">\r\n                          {setting.subtitles &&\r\n                            setting.subtitles.map((subtitle, subkey) => {\r\n                              return (\r\n                                <MDBNavItem>\r\n                                  <MDBNavLink\r\n                                    to=\"#\"\r\n                                    active={this.state.activeSubItem === subkey}\r\n                                    onClick={this.toggleSub(subkey)}\r\n                                    role=\"tab\"\r\n                                  >\r\n                                    {subtitle.title}\r\n                                  </MDBNavLink>\r\n                                </MDBNavItem>\r\n                              );\r\n                            })}\r\n                        </MDBNav>\r\n                        <MDBTabContent activeItem={this.state.activeSubItem}>\r\n                          {/* \r\n                              To be added\r\n                          */}\r\n                        </MDBTabContent>\r\n                      </MDBTabPane>\r\n                    </>\r\n                  );\r\n                })}\r\n            </MDBTabContent>\r\n          </MDBCol>\r\n        </MDBRow>\r\n      );\r\n    } else if (this.props.horizontal) {\r\n      return (\r\n        <>\r\n          <MDBNav className=\"nav-tabs\">\r\n            {this.props.items &&\r\n              this.props.items.map((item, key) => {\r\n                if (item.visible) {\r\n                  return (\r\n                    <MDBNavItem key={key}>\r\n                      <MDBNavLink\r\n                        to=\"#\"\r\n                        active={this.state.activeHorizontalItem === key}\r\n                        onClick={this.toggleHorizontal(key)}\r\n                        role=\"tab\"\r\n                      >\r\n                        {item.title}\r\n                        {item.notification && (\r\n                          <MDBBadge pill color=\"danger\">\r\n                            {\" \"}\r\n                          </MDBBadge>\r\n                        )}\r\n                        {item.pill && (\r\n                          <MDBBadge className=\"ml-2\" pill color=\"light\">\r\n                            {item.pill}\r\n                          </MDBBadge>\r\n                        )}\r\n                      </MDBNavLink>\r\n                    </MDBNavItem>\r\n                  );\r\n                } else {\r\n                  return null;\r\n                }\r\n              })}\r\n          </MDBNav>\r\n          <MDBTabContent activeItem={this.state.activeHorizontalItem}>\r\n            {this.props.children}\r\n          </MDBTabContent>\r\n        </>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default TabContainer;\r\n\r\n/**\r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","//> React\r\n// Contains all the functionality necessary to define React components\r\nimport React from \"react\";\r\n\r\n//> MDB\r\n// \"Material Design for Bootstrap\" is a great UI design framework\r\nimport { MDBAvatar } from \"mdbreact\";\r\n\r\nclass Avatar extends React.Component {\r\n  render() {\r\n    return (\r\n      <MDBAvatar className=\"mx-auto white\">\r\n        <img\r\n          src={this.props.url}\r\n          alt={this.props.alt}\r\n          className=\"rounded-circle img-fluid\"\r\n        />\r\n      </MDBAvatar>\r\n    );\r\n  }\r\n}\r\nexport default Avatar;\r\n\r\n/**\r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","//> React\r\n// Contains all the functionality necessary to define React components\r\nimport React from \"react\";\r\n\r\n//> MDB\r\n// \"Material Design for Bootstrap\" is a great UI design framework\r\nimport { MDBCardBody, MDBIcon } from \"mdbreact\";\r\n\r\n//> Components\r\nimport { LanguageChart } from \"../\";\r\n\r\n//> CSS\r\nimport \"./socialdata.scss\";\r\n\r\nclass Socialdata extends React.Component {\r\n  render() {\r\n    const {\r\n      status,\r\n      name,\r\n      company,\r\n      location,\r\n      email,\r\n      website,\r\n      accounts,\r\n      platforms,\r\n      organisations,\r\n    } = this.props;\r\n\r\n    let platformsJoined = {\r\n      github: false,\r\n      gitlab: false,\r\n      bitbucket: false,\r\n    }\r\n    platforms.map((platform, i) => {\r\n      switch(platform.platform){\r\n        case \"GitHub\":\r\n          platformsJoined.github = true;\r\n          return true;\r\n        case \"GitLab\":\r\n          platformsJoined.gitlab = true;\r\n          return true;\r\n        case \"BitBucket\":\r\n          platformsJoined.bitbucket = true;\r\n          return true;\r\n        default:\r\n          return false;\r\n      }\r\n    });\r\n\r\n    return (\r\n      <MDBCardBody id=\"socialdata\">\r\n        <h4 className=\"font-weight-bold mb-4\">{name}</h4>\r\n        {status && (status.message || status.icon) && (\r\n          <>\r\n            <hr />\r\n            {status.icon && (\r\n              <div dangerouslySetInnerHTML={{ __html: status.icon }}></div>\r\n            )}\r\n            {status.message && (\r\n              <p className=\"dark-grey-text\">{status.message}</p>\r\n            )}\r\n          </>\r\n        )}\r\n        {(company || location || email || website) && <hr />}\r\n        <div className=\"vcard text-left\">\r\n          {company && (\r\n            <span>\r\n              <MDBIcon icon=\"building\" />\r\n              {company}\r\n            </span>\r\n          )}\r\n          {location && (\r\n            <span>\r\n              <MDBIcon icon=\"map-marker-alt\" />\r\n              {location}\r\n            </span>\r\n          )}\r\n          {email && (\r\n            <a href={\"mailto:\" + email}>\r\n              <span>\r\n                <MDBIcon icon=\"envelope\" />\r\n                {email}\r\n              </span>\r\n            </a>\r\n          )}\r\n          {website && (\r\n            <a\r\n              href={\"https://\" + website}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <span>\r\n                <MDBIcon icon=\"link\" />\r\n                {website}\r\n              </span>\r\n            </a>\r\n          )}\r\n          <div className=\"platform-list my-3 py-3\">\r\n          {platformsJoined.gitlab &&\r\n            <MDBIcon fab icon=\"gitlab\" size=\"lg\" />\r\n          }\r\n          {platformsJoined.github &&\r\n            <MDBIcon fab icon=\"github\" size=\"lg\" />\r\n          }\r\n          {platformsJoined.bitbucket &&\r\n            <MDBIcon fab icon=\"bitbucket\" size=\"lg\" />\r\n          }\r\n          </div>\r\n          <div className=\"organisation-list my-3 pb-3\">\r\n            {organisations.map((item, i) => {\r\n              return(\r\n                <a\r\n                href={item.url}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                >\r\n                <img src={item.avatarUrl} alt={item.name+\" logo\"}/>\r\n                </a>\r\n              );\r\n            })}\r\n          </div>\r\n          <LanguageChart languages={this.props.languages} />\r\n        </div>\r\n      </MDBCardBody>\r\n    );\r\n  }\r\n}\r\nexport default Socialdata;\r\n\r\n/**\r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","export default function changeHue(rgb, degree) {\r\n  var hsl = rgbToHSL(rgb);\r\n  hsl.h += degree;\r\n  if (hsl.h > 360) {\r\n    hsl.h -= 360;\r\n  } else if (hsl.h < 0) {\r\n    hsl.h += 360;\r\n  }\r\n  return hslToRGB(hsl);\r\n}\r\n\r\n// exepcts a string and returns an object\r\nfunction rgbToHSL(rgb) {\r\n  // strip the leading # if it's there\r\n  rgb = rgb.replace(/^\\s*#|\\s*$/g, \"\");\r\n\r\n  // convert 3 char codes --> 6, e.g. `E0F` --> `EE00FF`\r\n  if (rgb.length === 3) {\r\n    rgb = rgb.replace(/(.)/g, \"$1$1\");\r\n  }\r\n\r\n  var r = parseInt(rgb.substr(0, 2), 16) / 255,\r\n    g = parseInt(rgb.substr(2, 2), 16) / 255,\r\n    b = parseInt(rgb.substr(4, 2), 16) / 255,\r\n    cMax = Math.max(r, g, b),\r\n    cMin = Math.min(r, g, b),\r\n    delta = cMax - cMin,\r\n    l = (cMax + cMin) / 2,\r\n    h = 0,\r\n    s = 0;\r\n\r\n  if (delta === 0) {\r\n    h = 0;\r\n  } else if (cMax === r) {\r\n    h = 60 * (((g - b) / delta) % 6);\r\n  } else if (cMax === g) {\r\n    h = 60 * ((b - r) / delta + 2);\r\n  } else {\r\n    h = 60 * ((r - g) / delta + 4);\r\n  }\r\n\r\n  if (delta === 0) {\r\n    s = 0;\r\n  } else {\r\n    s = delta / (1 - Math.abs(2 * l - 1));\r\n  }\r\n\r\n  return {\r\n    h,\r\n    s,\r\n    l\r\n  };\r\n}\r\n\r\n// expects an object and returns a string\r\nfunction hslToRGB(hsl) {\r\n  var h = hsl.h,\r\n    s = hsl.s,\r\n    l = hsl.l,\r\n    c = (1 - Math.abs(2 * l - 1)) * s,\r\n    x = c * (1 - Math.abs(((h / 60) % 2) - 1)),\r\n    m = l - c / 2,\r\n    r,\r\n    g,\r\n    b;\r\n\r\n  if (h < 60) {\r\n    r = c;\r\n    g = x;\r\n    b = 0;\r\n  } else if (h < 120) {\r\n    r = x;\r\n    g = c;\r\n    b = 0;\r\n  } else if (h < 180) {\r\n    r = 0;\r\n    g = c;\r\n    b = x;\r\n  } else if (h < 240) {\r\n    r = 0;\r\n    g = x;\r\n    b = c;\r\n  } else if (h < 300) {\r\n    r = x;\r\n    g = 0;\r\n    b = c;\r\n  } else {\r\n    r = c;\r\n    g = 0;\r\n    b = x;\r\n  }\r\n\r\n  r = normalizeRGBValue(r, m);\r\n  g = normalizeRGBValue(g, m);\r\n  b = normalizeRGBValue(b, m);\r\n\r\n  return rgbToHex(r, g, b);\r\n}\r\n\r\nfunction normalizeRGBValue(color, m) {\r\n  color = Math.floor((color + m) * 255);\r\n  if (color < 0) {\r\n    color = 0;\r\n  }\r\n  return color;\r\n}\r\n\r\nfunction rgbToHex(r, g, b) {\r\n  return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\r\n}\r\n\r\n/**\r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","//> React\r\n// Contains all the functionality necessary to define React components\r\nimport React from \"react\";\r\n\r\n//> MDB\r\n// \"Material Design for Bootstrap\" is a great UI design framework\r\nimport { MDBRow, MDBCol } from \"mdbreact\";\r\n\r\n//> Helpers\r\nimport changeHue from \"../../helpers/changeHue.js\";\r\n\r\n//> CSS\r\nimport \"./calendar.scss\";\r\n\r\nconst months = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\r\n\r\nclass Calender2D extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.myInput = React.createRef();\r\n\r\n    this.state = {\r\n      width: 0,\r\n      hue: 0\r\n    };\r\n  }\r\n\r\n  updateDimensions = () => {\r\n    this.setState({\r\n      width: this.myInput.current.offsetWidth\r\n    });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.updateDimensions);\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    // Add resize listener\r\n    window.addEventListener(\"resize\", this.updateDimensions);\r\n\r\n    let contributions = this.props.calendar.currentYear;\r\n\r\n    this.setState(\r\n      {\r\n        width: this.myInput.current.offsetWidth,\r\n        contributionsList: contributions\r\n      },\r\n      () => this.countContribs()\r\n    );\r\n\r\n    // Color RGB cycling\r\n    //let intervalID = window.setInterval(this.cycleHue, 70);\r\n  };\r\n\r\n  cycleHue = () => {\r\n    if (this.state.hue > 365) {\r\n      this.setState({\r\n        hue: 0\r\n      });\r\n    }\r\n    this.setState({\r\n      hue: this.state.hue + 1\r\n    });\r\n  };\r\n\r\n  countContribs = () => {\r\n    if (this.state.contributionsList) {\r\n      return this.state.contributionsList.totalContributions;\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  getEachMonth = (pos) => {\r\n    // Create new empty array\r\n    let month = new Array();\r\n\r\n    // Get current month\r\n    let current = new Date().getMonth();\r\n\r\n    // Have each month two times\r\n    month[0] = \"Jan\";\r\n    month[1] = \"Feb\";\r\n    month[2] = \"Mar\";\r\n    month[3] = \"Apr\";\r\n    month[4] = \"May\";\r\n    month[5] = \"Jun\";\r\n    month[6] = \"Jul\";\r\n    month[7] = \"Aug\";\r\n    month[8] = \"Sep\";\r\n    month[9] = \"Oct\";\r\n    month[10] = \"Nov\";\r\n    month[11] = \"Dec\";\r\n    month[12] = \"Jan\";\r\n    month[13] = \"Feb\";\r\n    month[14] = \"Mar\";\r\n    month[15] = \"Apr\";\r\n    month[16] = \"May\";\r\n    month[17] = \"Jun\";\r\n    month[18] = \"Jul\";\r\n    month[19] = \"Aug\";\r\n    month[20] = \"Sep\";\r\n    month[21] = \"Oct\";\r\n    month[22] = \"Nov\";\r\n    month[23] = \"Dec\";\r\n\r\n    return month[current + pos];\r\n  };\r\n\r\n  render() {\r\n    //console.log(this.state);\r\n    //console.log(this.state.contributionsList);\r\n    return (\r\n      <div id=\"calendar2d\">\r\n        <div className=\"text-right\">\r\n          <h3 className=\"font-weight-bold d-inline-block\">\r\n            {this.countContribs()}\r\n          </h3>\r\n          <span> contributions in the last year</span>\r\n        </div>\r\n        <MDBRow className=\"text-center\">\r\n          {months.map((month, key) => {\r\n            return (\r\n              <MDBCol size=\"months\" key={key}>\r\n                <small>{this.getEachMonth(key)}</small>\r\n              </MDBCol>\r\n            );\r\n          })}\r\n        </MDBRow>\r\n        <div ref={this.myInput}>\r\n          <svg className=\"calendar\" height={(this.state.width / 53) * 7}>\r\n            {this.state.contributionsList &&\r\n              this.state.contributionsList.weeks.map((week, wkey) => {\r\n                return week.contributionDays.map((day, dkey) => {\r\n                  if (wkey === 0) {\r\n                    return (\r\n                      <rect\r\n                        key={wkey + \"-\" + dkey}\r\n                        y={\r\n                          (this.state.width / 53) * 7 +\r\n                          (this.state.width / 53) * dkey -\r\n                          week.contributionDays.length * (this.state.width / 53)\r\n                        }\r\n                        x={0}\r\n                        width={this.state.width / 53}\r\n                        height={this.state.width / 53}\r\n                        data-data={day.date}\r\n                        data-count={day.total}\r\n                        fill={changeHue(day.color, this.state.hue)}\r\n                      ></rect>\r\n                    );\r\n                  } else {\r\n                    return (\r\n                      <rect\r\n                        key={wkey + \"-\" + dkey}\r\n                        y={(this.state.width / 53) * dkey}\r\n                        x={(this.state.width / 53) * wkey}\r\n                        width={this.state.width / 53}\r\n                        height={this.state.width / 53}\r\n                        data-data={day.date}\r\n                        data-count={day.total}\r\n                        fill={changeHue(day.color, this.state.hue)}\r\n                      ></rect>\r\n                    );\r\n                  }\r\n                });\r\n              })}\r\n          </svg>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Calender2D;\r\n\r\n/**\r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","//> React\r\n// Contains all the functionality necessary to define React components\r\nimport React from \"react\";\r\n\r\n//> Additional libraries\r\n// Time management\r\nimport moment from \"moment\";\r\n\r\n//> MDB\r\n// \"Material Design for Bootstrap\" is a great UI design framework\r\nimport { MDBRow, MDBCol } from \"mdbreact\";\r\n\r\n//> Helpers\r\nimport changeHue from \"../../helpers/changeHue.js\";\r\n\r\n//> CSS\r\nimport \"./calendar3d.scss\";\r\n\r\nclass Calender3D extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.myInput = React.createRef();\r\n    this.state = {\r\n      width: 0,\r\n      hue: 0\r\n    };\r\n  }\r\n\r\n  updateDimensions = () => {\r\n    this.setState({\r\n      width: this.myInput.current.offsetWidth\r\n    });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.updateDimensions);\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    // Add resize listener\r\n    window.addEventListener(\"resize\", this.updateDimensions);\r\n    this.setState(\r\n      {\r\n        width: this.myInput.current.offsetWidth\r\n      },\r\n      () => this.renderIsometrics()\r\n    );\r\n  };\r\n\r\n  renderTopStats() {\r\n    let countTotal, averageCount, datesTotal, maxCount, dateBest;\r\n\r\n    let contribData = this.props.contrib[2019];\r\n    let contributionCalendar = this.props.calendar.currentYear;\r\n\r\n    countTotal = contributionCalendar.total;\r\n    averageCount = contribData.average;\r\n    datesTotal =\r\n      moment(contributionCalendar.fromDate).format(\"MMM DD, YYYY\") +\r\n      \" - \" +\r\n      moment(contributionCalendar.toDate).format(\"MMM DD, YYYY\");\r\n    maxCount = contribData.busiestDay.total;\r\n    dateBest = moment(contribData.busiestDay.date).format(\"MMM DD\");\r\n\r\n    let html;\r\n    html = `<div class=\"ic-stats-block ic-stats-top\">\\n\r\n    <span class=\"ic-stats-table\">\\n\r\n    <span class=\"ic-stats-row\">\\n\r\n    <span class=\"ic-stats-label\">1 year total\\n\r\n    <span class=\"ic-stats-count\">${countTotal}</span>\\n\r\n    <span class=\"ic-stats-average\">${averageCount}</span> per day\\n\r\n    </span>\\n\r\n    <span class=\"ic-stats-meta ic-stats-total-meta\">\\n\r\n    <span class=\"ic-stats-unit\">contributions</span>\\n\r\n    <span class=\"ic-stats-date\">${datesTotal}</span>\\n\r\n    </span>\\n\r\n    </span>\\n\r\n    <span class=\"ic-stats-row\">\\n\r\n    <span class=\"ic-stats-label\">Busiest day\\n\r\n    <span class=\"ic-stats-count\">${maxCount}</span>\\n\r\n    </span>\\n\r\n    <span class=\"ic-stats-meta\">\\n\r\n    <span class=\"ic-stats-unit\">contributions</span>\\n\r\n    <span class=\"ic-stats-date\">${dateBest}</span>\\n\r\n    </span>\\n\r\n    </span>\\n\r\n    </span>\\n\r\n    </span>\\n\r\n    </div>`;\r\n    return { __html: html };\r\n  }\r\n\r\n  renderBottomStats() {\r\n    let streakLongest, datesLongest, streakCurrent, datesCurrent;\r\n\r\n    let contribData = this.props.contrib[\"2019\"];\r\n    let contributionCalendar = this.props.calendar.currentYear;\r\n\r\n    streakLongest = contribData.longestStreak.total;\r\n    datesLongest =\r\n      moment(contribData.longestStreak.startDate).format(\"MMM DD, YYYY\") +\r\n      \" - \" +\r\n      moment(contribData.longestStreak.endDate).format(\"MMM DD, YYYY\");\r\n    streakCurrent = contribData.currentStreak.total;\r\n    datesCurrent =\r\n      moment(contribData.currentStreak.startDate).format(\"MMM DD, YYYY\") +\r\n      \" - \" +\r\n      moment(contribData.currentStreak.endDate).format(\"MMM DD, YYYY\");\r\n\r\n    let html;\r\n    html = `<div class=\"ic-stats-block ic-stats-bottom\">\\n\r\n    <span class=\"ic-stats-table\">\\n\r\n    <span class=\"ic-stats-row\">\\n\r\n    <span class=\"ic-stats-label\">Longest streak\\n\r\n    <span class=\"ic-stats-count\">${streakLongest}</span>\\n\r\n    </span>\\n\r\n    <span class=\"ic-stats-meta\">\\n\r\n    <span class=\"ic-stats-unit\">days</span>\\n\r\n    <span class=\"ic-stats-date\">${datesLongest}</span>\\n\r\n    </span>\\n\r\n    </span>\\n\r\n    <span class=\"ic-stats-row\">\\n\r\n    <span class=\"ic-stats-label\">Current streak\\n\r\n    <span class=\"ic-stats-count\">${streakCurrent}</span>\\n\r\n    </span>\\n\r\n    <span class=\"ic-stats-meta\">\\n\r\n    <span class=\"ic-stats-unit\">days</span>\\n\r\n    <span class=\"ic-stats-date\">${datesCurrent}</span>\\n\r\n    </span>\\n\r\n    </span>\\n\r\n    </span>\\n\r\n    </div>`;\r\n    return { __html: html };\r\n  }\r\n\r\n  renderIsometrics = () => {\r\n    const obelisk = require(\"obelisk.js\");\r\n\r\n    // Create a canvas 2D point for pixel view world\r\n    let point = new obelisk.Point(70, 70);\r\n\r\n    // Create view instance to nest everything\r\n    // Canvas could be either DOM or jQuery element\r\n    let pixelView = new obelisk.PixelView(this.context, point);\r\n\r\n    // Get contribs\r\n    let contributions = this.props.calendar.currentYear;\r\n\r\n    // Define basic variables\r\n    let SIZE = 10;\r\n    let MAXHEIGHT = 100;\r\n    let x = 0;\r\n    let y = 0;\r\n    let maxCount = 0; // Max number of contributions / day in the last year\r\n\r\n    let values = [];\r\n\r\n    contributions.weeks.map((week, wkey) => {\r\n      values[wkey] = [];\r\n      week.contributionDays.map((day, dkey) => {\r\n        // Get max number of contributions\r\n        if (day.total > maxCount) {\r\n          maxCount = day.total;\r\n        }\r\n        values[wkey][dkey] = day;\r\n      });\r\n    });\r\n\r\n    values.map((week, wi) => {\r\n      week.map((day, di) => {\r\n        // Normalize the values to achieve even distribution\r\n        let cubeHeight = 3;\r\n        if (maxCount > 0) {\r\n          cubeHeight += parseInt((MAXHEIGHT / maxCount) * day.total);\r\n        }\r\n\r\n        // Offsets\r\n        let x = wi;\r\n        let y = di;\r\n\r\n        // Create cube dimension and color instance\r\n        //let gray = obelisk.ColorPattern.GRAY;\r\n        let fill = day.color;\r\n        let color = new obelisk.CubeColor().getByHorizontalColor(\r\n          parseInt(\"0x\" + fill.replace(\"#\", \"\"))\r\n        );\r\n\r\n        let dimension = new obelisk.CubeDimension(SIZE, SIZE, cubeHeight);\r\n        // Build cube with dimension and color instance\r\n        let p3d = new obelisk.Point3D(SIZE * x, SIZE * y, 0);\r\n        var cube = new obelisk.Cube(dimension, color, false);\r\n\r\n        // Render cube primitive into view\r\n        pixelView.renderObject(cube, p3d);\r\n      });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"calendar3d\">\r\n        <div dangerouslySetInnerHTML={this.renderTopStats()} />\r\n        <div dangerouslySetInnerHTML={this.renderBottomStats()} />\r\n        <div ref={this.myInput}>\r\n          <canvas\r\n            ref={(c) => (this.context = c)}\r\n            width={this.state.width}\r\n            height=\"410\"\r\n          ></canvas>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Calender3D;\r\n\r\n/**\r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","//> React\r\n// Contains all the functionality necessary to define React components\r\nimport React from \"react\";\r\n\r\n//> Chart.js\r\n// \"Material Design for Bootstrap\" is using chart.js to generate its charts\r\nimport { Radar } from \"react-chartjs-2\";\r\n\r\nclass LanguageChart extends React.Component {\r\n  state = {\r\n    dataPolar: {\r\n      datasets: [\r\n        {\r\n          data: [300, 250, 100, 40],\r\n          backgroundColor: [\r\n            \"rgba(247, 70, 74, 0.8)\",\r\n            \"rgba(70, 191, 189, 0.8)\",\r\n            \"rgba(253, 180, 92, 0.8)\",\r\n            \"rgba(148, 159, 177, 0.8)\"\r\n          ],\r\n          label: \"Your top languages\"\r\n        }\r\n      ],\r\n      labels: [\"JavaScript\", \"Python\", \"CSS\", \"Roff\"]\r\n    }\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    let languages = this.props.languages.slices;\r\n\r\n    let colors = [];\r\n    let labels = [];\r\n    let data = [];\r\n\r\n    Object.values(languages).map((language, i) => {\r\n      colors.push(language.color);\r\n      labels.push(language.name);\r\n      data.push(language.share);\r\n    });\r\n\r\n    this.setState({\r\n      dataPolar: {\r\n        datasets: [\r\n          {\r\n            data,\r\n            backgroundColor: colors,\r\n            label: \"Your top languages\"\r\n          }\r\n        ],\r\n        labels\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <p className=\"lead font-weight-bold text-center mt-3\">\r\n          Your top languages\r\n        </p>\r\n        {this.state.dataPolar &&\r\n          <Radar\r\n            className=\"w-100 h-auto\"\r\n            data={this.state.dataPolar}\r\n            options={\r\n              ({\r\n                responsive: true\r\n              },\r\n              {\r\n                legend: {\r\n                  display: false\r\n                }\r\n              })\r\n            }\r\n          />\r\n        }\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LanguageChart;\r\n\r\n/**\r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","//> React\r\n// Contains all the functionality necessary to define React components\r\nimport React from \"react\";\r\n// Router\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\n//> MDB\r\n// \"Material Design for Bootstrap\" is a great UI design framework\r\nimport {\r\n  MDBNavbar,\r\n  MDBContainer,\r\n  MDBNavbarBrand,\r\n  MDBNavbarNav,\r\n  MDBNavItem,\r\n  MDBNavLink,\r\n  MDBNavbarToggler,\r\n  MDBCollapse,\r\n  MDBFormInline,\r\n  MDBInput,\r\n  MDBIcon,\r\n  MDBDropdown,\r\n  MDBDropdownToggle,\r\n  MDBDropdownMenu,\r\n  MDBDropdownItem\r\n} from \"mdbreact\";\r\n\r\n//> Components\r\nimport { \r\n  SearchBar\r\n} from \"../../molecules\";\r\n\r\n//> CSS\r\nimport \"./navbar.scss\";\r\n\r\nclass Navbar extends React.Component {\r\n  state = {\r\n    isOpen: false\r\n  };\r\n\r\n  toggleCollapse = () => {\r\n    this.setState({ isOpen: !this.state.isOpen });\r\n  };\r\n\r\n  logout = () => {\r\n      // Remove the JSON Web Token\r\n      localStorage.removeItem(\"jwt_snek\");\r\n      // Redirect to login\r\n      window.location.href = \"/\"; \r\n  }\r\n\r\n  render() {\r\n    const { location } = this.props;\r\n    const { data } = this.props;\r\n\r\n    console.log(data);\r\n\r\n    return (\r\n      <MDBNavbar color=\"elegant-color\" dark expand=\"md\">\r\n        <MDBContainer>\r\n          <MDBNavbarBrand>\r\n            <strong className=\"white-text\">SNEK</strong>\r\n          </MDBNavbarBrand>\r\n          <MDBNavbarToggler onClick={this.toggleCollapse} />\r\n          <MDBCollapse id=\"navbarCollapse3\" isOpen={this.state.isOpen} navbar>\r\n            <SearchBar />\r\n            <MDBNavbarNav left>\r\n              <MDBNavItem>\r\n                <MDBNavLink to=\"#!\">Ranking</MDBNavLink>\r\n              </MDBNavItem>\r\n              <MDBNavItem>\r\n                <MDBNavLink to=\"#!\">Developer</MDBNavLink>\r\n              </MDBNavItem>\r\n              <MDBNavItem>\r\n                <MDBNavLink to=\"#!\">Jobs</MDBNavLink>\r\n              </MDBNavItem>\r\n              <MDBNavItem>\r\n                <MDBNavLink to=\"#!\">Trends</MDBNavLink>\r\n              </MDBNavItem>\r\n            </MDBNavbarNav>\r\n            \r\n              {data.logged ? (\r\n                <MDBNavbarNav right>\r\n                  <MDBNavItem>\r\n                    <span \r\n                    className=\"nav-link cursor-pointer\"\r\n                    onClick={this.logout}\r\n                    >\r\n                    Logout\r\n                    </span>\r\n                  </MDBNavItem>\r\n                </MDBNavbarNav>\r\n              ) : (\r\n                <MDBNavbarNav right>\r\n                  <MDBNavItem active={data.pageLogin}>\r\n                  {location.pathname === \"/\" ? (\r\n                    <span \r\n                    className=\"nav-link cursor-pointer\"\r\n                    onClick={() => this.props.changeState(\"pageLogin\", true)}\r\n                    >\r\n                    Sign in\r\n                    </span>\r\n                  ) : (\r\n                    <MDBNavLink to=\"/\">Sign in</MDBNavLink>\r\n                  )}\r\n                  </MDBNavItem>\r\n                  <MDBNavItem active={!data.pageLogin}>\r\n                    {location.pathname === \"/\" ? (\r\n                    <span \r\n                    className=\"nav-link cursor-pointer\"\r\n                    onClick={() => this.props.changeState(\"pageLogin\", false)}\r\n                    >\r\n                    Sign up\r\n                    </span>\r\n                  ) : (\r\n                    <MDBNavLink to=\"/\">Sign up</MDBNavLink>\r\n                  )}\r\n                  </MDBNavItem>\r\n                </MDBNavbarNav>\r\n              )}\r\n          </MDBCollapse>\r\n        </MDBContainer>\r\n      </MDBNavbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Navbar);\r\n\r\n/**\r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","//> React\r\n// Contains all the functionality necessary to define React components\r\nimport React from \"react\";\r\n\r\n// Links (replaces <a> tags)\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//> MDB\r\n// \"Material Design for Bootstrap\" is a great UI design framework\r\nimport {\r\n  MDBFooter,\r\n  MDBContainer,\r\n} from \"mdbreact\";\r\n\r\nclass Footer extends React.Component{\r\n  render(){\r\n    return(\r\n      <MDBFooter color=\"elegant-color\">\r\n        <MDBContainer className=\"text-center py-3\">\r\n          <Link\r\n          to=\"/about\"\r\n          >\r\n          Impressum\r\n          </Link>\r\n        </MDBContainer>\r\n        <div className=\"footer-copyright text-center py-3\">\r\n          <MDBContainer fluid>\r\n            &copy; 2017 - {new Date().getFullYear()} Copyright: Werbeagentur Christian Aichner\r\n            <p className=\"my-2 font-weight-bold\">\r\n              Made with\r\n              <i className=\"fas fa-heart pulse red-text ml-1 mr-1\" aria-hidden=\"true\"></i>\r\n              by\r\n              <a\r\n              href=\"https://www.aichner-christian.com\" \r\n              target=\"_blank\"\r\n              className=\"ml-1\"\r\n              rel=\"noopener noreferrer\"\r\n              >\r\n              us\r\n              </a>.\r\n            </p>\r\n          </MDBContainer>\r\n        </div>\r\n      </MDBFooter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n\r\n/** \r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","//> React\r\n// Contains all the functionality necessary to define React components\r\nimport React from \"react\";\r\n\r\n//> Additional packages\r\nimport Typist from \"react-typist\";\r\n\r\nclass TextTypist extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { \r\n      active: 0\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.setState({\r\n      scope: this.props.scope\r\n    });\r\n  }\r\n\r\n  onTypingDone = () => {\r\n    this.setState({\r\n      scope: null\r\n    }, () => this.setState({\r\n      scope: this.props.scope\r\n    }));\r\n  };\r\n\r\n  render(){\r\n    if(this.state.scope){\r\n      return(\r\n        <Typist \r\n        className=\"d-inline typist\"\r\n        cursor={{\r\n          show: true,\r\n          blink: true,\r\n          element: \"_\",\r\n        }}\r\n        onTypingDone={() => this.onTypingDone()}\r\n        >\r\n          <Typist.Delay ms={2000} />\r\n          {this.state.scope.map((text, i) => {\r\n            return (\r\n              <span key={i}>\r\n                {text}\r\n                {<Typist.Backspace count={text.length + 10} delay={2000} />}\r\n              </span>\r\n            );\r\n          })}\r\n        </Typist>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default TextTypist;\r\n\r\n/**\r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","//> React\r\n// Contains all the functionality necessary to define React components\r\nimport React from \"react\";\r\n\r\n//> MDB\r\n// \"Material Design for Bootstrap\" is a great UI design framework\r\nimport {\r\n  MDBInput,\r\n  MDBIcon,\r\n  MDBListGroup,\r\n  MDBListGroupItem,\r\n} from \"mdbreact\";\r\n\r\nclass SearchBar extends React.Component {\r\n  state = {\r\n    search: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { location } = this.props;\r\n    const { data } = this.props;\r\n    return (\r\n      <>\r\n        <div className=\"md-form my-0 mx-2\">\r\n          <MDBInput\r\n            className=\"mr-sm-2\"\r\n            outline\r\n            maxLength=\"20\"\r\n            value={this.state.search}\r\n            name=\"search\"\r\n            type=\"search\"\r\n            onChange={this.handleChange}\r\n            placeholder=\"Search\"\r\n            aria-label=\"Search\"\r\n          />\r\n          <MDBIcon icon=\"search\" />\r\n        </div>\r\n        {this.state.search &&\r\n        <div className=\"search-results\">\r\n          <MDBListGroup>\r\n          <a \r\n          href={\"https://www.google.com/search?q=\"+this.state.search}\r\n          target=\"_blank\"\r\n          className=\"text-muted\"\r\n          >\r\n            <MDBListGroupItem><MDBIcon fab icon=\"google\" className=\"mr-2\" />\r\n            {this.state.search}\r\n            </MDBListGroupItem>\r\n          </a>\r\n          </MDBListGroup>\r\n        </div>\r\n        }\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n\r\n/**\r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","//> React\r\n// Contains all the functionality necessary to define React components\r\nimport React from \"react\";\r\n\r\nclass Redirect extends React.Component {\r\n  componentDidMount = () => {\r\n    this.getRedirect();\r\n  };\r\n\r\n  getRedirect = async () => {\r\n    // Get name of window which was set by the parent to be the unique\r\n    // request key\r\n    const requestKey = window.name;\r\n    // Update corresponding entry with the redirected url which should\r\n    // contain either access token or failure reason in the query\r\n    // parameter / hash\r\n    localStorage.setItem(requestKey, window.location.href);\r\n    window.close();\r\n  };\r\n\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\nexport default Redirect;\r\n\r\n/**\r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","//> React\r\n// Contains all the functionality necessary to define React components\r\nimport React from \"react\";\r\n\r\n//> Additional\r\n// Charts for displaying user contribution distribution (Chart.js 2)\r\nimport { \r\n  Radar\r\n} from \"react-chartjs-2\";\r\n\r\n//> MDB\r\n// \"Material Design for Bootstrap\" is a great UI design framework\r\nimport {\r\n  MDBContainer\r\n} from \"mdbreact\";\r\n\r\nclass ChartsPage extends React.Component {\r\n\r\n  state={\r\n    dataRadar: {\r\n      labels: [\"Loading\"],\r\n      datasets: [{\r\n        label: \"Loading\"\r\n      }]\r\n    }\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.setState({\r\n      dataRadar: {\r\n        labels: [\"Code review\", \"Issues\", \"Pull request\", \"Commits\"],\r\n        datasets: this.calculateSources()\r\n      },\r\n      dataRadarOptions: {\r\n        responsive: true,\r\n        elements: {\r\n          line: {\r\n            tension: 0\r\n          }\r\n        },\r\n        legend: {\r\n          display: true,\r\n        },\r\n        scale: {\r\n          ticks: {\r\n            beginAtZero: true,\r\n            max: 100,\r\n            min: 0,\r\n            stepSize: 20\r\n          }\r\n        },\r\n        scales: {\r\n            yAxes: [{\r\n              gridLines: {\r\n                display: false,\r\n                drawBorder: false\r\n              },\r\n              ticks: {\r\n                display: false\r\n              }\r\n            }],\r\n            xAxes: [{\r\n              gridLines: {\r\n                display: false,\r\n                drawBorder: false\r\n              },\r\n              ticks: {\r\n                beginAtZero: true,\r\n                display: false,\r\n              }\r\n            }]\r\n        }\r\n    }\r\n    });\r\n  }\r\n\r\n  calculateSources = () => {\r\n    let totalReviews = 0, totalIssues = 0, totalRequests = 0, totalCommits = 0, totalSources = 1, results = [];\r\n\r\n    // Get data points for all sources\r\n    let types = this.props.types.contribs;\r\n    totalReviews = types.codeReviews.share;\r\n    totalIssues = types.issue.share;\r\n    totalRequests = types.pullRequest.share;\r\n    totalCommits = types.commit.share;\r\n\r\n    let values = [\r\n      totalReviews,\r\n      totalIssues,\r\n      totalRequests,\r\n      totalCommits\r\n    ];\r\n\r\n    results.push({\r\n      label: \"GitHub\",\r\n      backgroundColor: \"rgba(51,51,51,0)\",\r\n      borderColor: \"rgba(51,51,51,.4)\",\r\n      data: values\r\n    });\r\n    \r\n    // Calculate averages\r\n    let avgReviews, avgIssues, avgRequests, avgCommits;\r\n\r\n    avgReviews = parseInt(totalReviews) / parseInt(totalSources);\r\n    avgIssues = parseInt(totalIssues) / parseInt(totalSources);\r\n    avgRequests = parseInt(totalRequests) / parseInt(totalSources);\r\n    avgCommits = parseInt(totalCommits) / parseInt(totalSources);\r\n\r\n    // Create average data points\r\n    /*results.push({\r\n      label: \"Average\",\r\n      backgroundColor: \"rgba(33, 181, 33, .7)\",\r\n      borderColor: \"rgba(33, 181, 33, .3)\",\r\n      data: [\r\n        avgReviews,\r\n        avgIssues,\r\n        avgReviews,\r\n        avgCommits\r\n      ]\r\n    });*/\r\n\r\n    return results;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <MDBContainer>\r\n        <Radar \r\n        data={this.state.dataRadar}\r\n        options={this.state.dataRadarOptions}\r\n        />\r\n      </MDBContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChartsPage;\r\n\r\n/**\r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","//> React\r\n// Contains all the functionality necessary to define React components\r\nimport React from \"react\";\r\n\r\n//> MDB\r\n// \"Material Design for Bootstrap\" is a great UI design framework\r\nimport {\r\n  MDBContainer,\r\n  MDBTabPane,\r\n  MDBTabContent,\r\n  MDBNav,\r\n  MDBNavItem,\r\n  MDBNavLink,\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBBtn,\r\n  MDBCardBody,\r\n  MDBCardTitle,\r\n  MDBCardText,\r\n  MDBIcon\r\n} from \"mdbreact\";\r\n\r\n//> Components\r\nimport { TabContainer } from \"../../molecules\";\r\n\r\n//> Data\r\nconst settings = [\r\n  {\r\n    title: \"General\",\r\n    subtitles: [\r\n      {\r\n        title: \"Profile\"\r\n      }\r\n    ],\r\n    icon: \"user\"\r\n  },\r\n  {\r\n    title: \"Customization\",\r\n    subtitles: [\r\n      {\r\n        title: \"Features\"\r\n      },\r\n      {\r\n        title: \"Colors\"\r\n      },\r\n      {\r\n        title: \"User profile\"\r\n      }\r\n    ],\r\n    icon: \"leaf\"\r\n  },\r\n  {\r\n    title: \"Security\",\r\n    subtitles: [\r\n      {\r\n        title: \"Login\"\r\n      }\r\n    ],\r\n    icon: \"lock\"\r\n  },\r\n  {\r\n    title: \"API\",\r\n    subtitles: [\r\n      {\r\n        title: \"Profile\"\r\n      }\r\n    ],\r\n    icon: \"network-wired\"\r\n  },\r\n  {\r\n    title: \"Billing\",\r\n    icon: \"dollar-sign\"\r\n  },\r\n  {\r\n    title: \"Stats\",\r\n    subtitles: [\r\n      {\r\n        title: \"General\"\r\n      }\r\n    ],\r\n    icon: \"lock\"\r\n  },\r\n  {\r\n    title: \"Sources\",\r\n    subtitles: [\r\n      {\r\n        title: \"General\"\r\n      }\r\n    ],\r\n    icon: \"cloud\"\r\n  }\r\n];\r\n\r\nclass Settings extends React.Component {\r\n  render() {\r\n    return (\r\n      <MDBContainer>\r\n        <h2 className=\"mt-5\">Settings</h2>\r\n        <TabContainer settings={settings} vertical />\r\n      </MDBContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Settings;\r\n\r\n/**\r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","//> React\r\n// Contains all the functionality necessary to define React components\r\nimport React from \"react\";\r\n\r\n//> MDB\r\n// \"Material Design for Bootstrap\" is a great UI design framework\r\nimport { \r\n  MDBTabPane,\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBIcon,\r\n} from \"mdbreact\";\r\n\r\n//> CSS\r\nimport \"./projects.scss\";\r\n\r\nclass Projects extends React.Component {\r\n\r\n  state = {};\r\n\r\n  getBadge = async (name, url) => {\r\n    if(!this.state[name]){\r\n      this.setState({\r\n        [name]: null\r\n      });\r\n      let response = await fetch(url);\r\n      if (response.ok) {\r\n        let badge = await response.text();\r\n        if(!badge.includes(\"repo not found\")){\r\n          this.setState({\r\n            [name]: url\r\n          });\r\n        } else {\r\n          this.setState({\r\n            [name]: null\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <MDBTabPane tabId={this.props.id} role=\"tabpanel\">\r\n        {this.props.repos && (\r\n          <>\r\n            <h3 className=\"font-weight-bold mt-4\">Repositories</h3>\r\n            <MDBRow className=\"project-list\">\r\n              {this.props.repos.map((repo, key) => {\r\n\r\n                if(this.state[\"lastCommit\"+key] === undefined){\r\n                  this.getBadge(\"lastCommit\"+key,\"https://cors-anywhere.herokuapp.com/https://img.shields.io/github/last-commit/\"+repo.owner.login+\"/\"+repo.name);\r\n                }\r\n\r\n                return (\r\n                  <MDBCol key={key} md=\"6\">\r\n                  <a\r\n                    href={repo.url}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                  >\r\n                    <li>\r\n                    <div>\r\n                      <p className=\"lead mb-1 float-left\">\r\n                      {repo.name}\r\n                      </p>\r\n                      {repo.languagePie.slices.length > 0 ? (\r\n                        <small className=\"mb-1 float-right text-muted\">\r\n                        <MDBIcon icon=\"square\" className=\"pr-1\" style={{color: repo.languagePie.slices[0].color}} />\r\n                        {repo.languagePie.slices[0].name}\r\n                        </small>\r\n                      ) : (\r\n                        <small className=\"mb-1 float-right text-muted\">\r\n                        No top language\r\n                        </small>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"clearfix\" />\r\n                    <div>\r\n                      <img src={repo.avatarUrl} alt={repo.owner.login}/>\r\n                      <small>Owned by {repo.owner.login}</small>\r\n                    </div>\r\n                    <div className=\"py-2\">\r\n                      <img \r\n                      className=\"img-badge\"\r\n                      src={this.state[\"lastCommit\"+key]}\r\n                      />\r\n                    </div>\r\n                    </li>\r\n                  </a>\r\n                  </MDBCol>\r\n                );\r\n              })}\r\n            </MDBRow>\r\n          </>\r\n        )}\r\n      </MDBTabPane>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Projects;\r\n\r\n/**\r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","//> React\r\n// Contains all the functionality necessary to define React components\r\nimport React from \"react\";\r\n\r\n//> MDB\r\n// \"Material Design for Bootstrap\" is a great UI design framework\r\nimport { MDBTabPane } from \"mdbreact\";\r\n\r\nclass Resume extends React.Component {\r\n  render() {\r\n    return <MDBTabPane tabId={this.props.id} role=\"tabpanel\"></MDBTabPane>;\r\n  }\r\n}\r\n\r\nexport default Resume;\r\n\r\n/**\r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","//> React\r\n// Contains all the functionality necessary to define React components\r\nimport React from \"react\";\r\n\r\n//> MDB\r\n// \"Material Design for Bootstrap\" is a great UI design framework\r\nimport { \r\n  MDBTabPane\r\n} from \"mdbreact\";\r\n\r\n//> Components\r\n// Molecules\r\nimport {\r\n  Calendar2D,\r\n  Calendar3D,\r\n} from \"../../../molecules\";\r\n\r\nclass Overview extends React.Component {\r\n  render() {\r\n    return (\r\n      <MDBTabPane tabId={this.props.id} role=\"tabpanel\">\r\n        {(this.props.contrib && this.props.calendar) && (\r\n          <>\r\n            <Calendar3D contrib={this.props.contrib} calendar={this.props.calendar} />\r\n            {this.props.contrib &&\r\n              <Calendar2D calendar={this.props.calendar} />\r\n            }\r\n          </>\r\n        )}\r\n      </MDBTabPane>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Overview;\r\n\r\n/**\r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","//> React\r\n// Contains all the functionality necessary to define React components\r\nimport React from \"react\";\r\n\r\n//> MDB\r\n// \"Material Design for Bootstrap\" is a great UI design framework\r\nimport { MDBTabPane } from \"mdbreact\";\r\n\r\nclass Education extends React.Component {\r\n  render() {\r\n    return <MDBTabPane tabId={this.props.id} role=\"tabpanel\"></MDBTabPane>;\r\n  }\r\n}\r\n\r\nexport default Education;\r\n\r\n/**\r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","//> React\r\n// Contains all the functionality necessary to define React components\r\nimport React from \"react\";\r\n// Router\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n//> MDB\r\n// \"Material Design for Bootstrap\" is a great UI design framework\r\nimport {\r\n  MDBEdgeHeader,\r\n  MDBFreeBird,\r\n  MDBContainer,\r\n  MDBCol,\r\n  MDBRow,\r\n  MDBCardBody,\r\n  MDBIcon,\r\n  MDBCard,\r\n  MDBCardTitle,\r\n  MDBCardImage,\r\n  MDBCardText,\r\n  MDBAnimation,\r\n  MDBAvatar,\r\n  MDBCardUp\r\n} from \"mdbreact\";\r\n\r\n//> Images\r\n// To be added\r\n\r\n//> Components\r\n// Molecules\r\nimport { TabContainer, Avatar, Socialdata } from \"../../molecules\";\r\n// Organisms\r\nimport {\r\n  ResumeTab,\r\n  ProjectsTab,\r\n  OverviewTab,\r\n  EducationTab,\r\n} from \"../../organisms/tabs\";\r\n\r\n//> Handlers\r\n// To be added\r\n\r\n//> CSS\r\nimport \"./profile.scss\";\r\n\r\nclass Dashboard extends React.Component {\r\n\r\n  state = {};\r\n\r\n  setTabItems = () => {\r\n\r\n    // Get project count\r\n    console.log(this.props.globalStore.data);\r\n    const projectcount = this.props.globalStore.data.repos.length;\r\n\r\n    this.setState({\r\n      tabitems: [\r\n        {\r\n          title: \"Overview\",\r\n          visible: true,\r\n          pill: false,\r\n          notification: false\r\n        },\r\n        {\r\n          title: \"Projects\",\r\n          visible: true,\r\n          pill: projectcount,\r\n          notification: true\r\n        },\r\n        {\r\n          title: \"Education\",\r\n          visible: true,\r\n          notification: false\r\n        },\r\n        {\r\n          title: \"Posts\",\r\n          visible: true,\r\n          pill: \"0\",\r\n          notification: false\r\n        },\r\n        {\r\n          title: \"Papers\",\r\n          visible: true,\r\n          pill: \"0\",\r\n          notification: false\r\n        },\r\n        {\r\n          title: \"Talks\",\r\n          visible: true,\r\n          pill: \"0\",\r\n          notification: false\r\n        },\r\n      ]\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { globalStore } = this.props;\r\n    \r\n    //> Debugging access point - state\r\n    //console.log(globalStore);\r\n\r\n    if(!globalStore.data.logged) { return (<Redirect to=\"/\"/>); }\r\n\r\n    let data = globalStore.data;\r\n  \r\n    // Get tab items\r\n    if(data && !this.state.tabitems){\r\n      this.setTabItems();\r\n    }\r\n\r\n    if (data && this.state.tabitems) {\r\n      return (\r\n        <div id=\"profile\">\r\n          <MDBContainer className=\"py-5\">\r\n            <MDBRow>\r\n              <MDBCol md=\"4\" className=\"text-center\">\r\n                <MDBCard testimonial>\r\n                  <MDBCardUp color=\"info\" />\r\n                  <Avatar url={data.user.avatarUrl} alt={data.user.name} />\r\n                  <Socialdata\r\n                    status={{\r\n                      message: data.user.status, \r\n                      icon: data.user.statusEmojiHTML\r\n                    }}\r\n                    name={data.user.name}\r\n                    company={data.user.company}\r\n                    location={data.user.location}\r\n                    email={data.user.email}\r\n                    languages={data.languages}\r\n                    website={data.user.websiteUrl}\r\n                    organisations={data.orgs}\r\n                    platforms={data.user.platforms}\r\n                  />\r\n                </MDBCard>\r\n              </MDBCol>\r\n              <MDBCol md=\"8\">\r\n                <TabContainer items={this.state.tabitems} horizontal>\r\n                  <OverviewTab \r\n                  id={0}\r\n                  contrib={data.contrib}\r\n                  calendar={data.contribCalendar}\r\n                  contribTypes={data.contribTypes}\r\n                  />\r\n                  <ProjectsTab id={1} repos={data.repos} />\r\n                  <EducationTab id={2} />\r\n                </TabContainer>\r\n              </MDBCol>\r\n            </MDBRow>\r\n          </MDBContainer>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n\r\n/**\r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","import * as create from \"./Statements/Create\";\r\nvar alasql = require(\"alasql\");\r\n\r\nconst initTables = `\r\n    ${create.platform}\r\n    ${create.organization}\r\n    ${create.member}\r\n    ${create.languagePie}\r\n    ${create.repository}\r\n    ${create.languageSlice}\r\n    ${create.statistic}\r\n    ${create.streak}\r\n    ${create.calendar}\r\n    ${create.contrib}\r\n    ${create.organizationHasMember}\r\n    ${create.repositoryHasMember}\r\n    ${create.platformHasOrganization}\r\n    ${create.platformHasRepository}\r\n`;\r\n\r\nexport function Database(dbName) {\r\n  let db = new alasql.Database(dbName);\r\n\r\n  db.exec(initTables);\r\n\r\n  return db;\r\n}\r\n\r\n/**\r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","export const platform = `\r\nDROP TABLE IF EXISTS platform;\r\nCREATE TABLE IF NOT EXISTS platform (\r\n    id INT NOT NULL AUTO_INCREMENT,\r\n    platformName VARCHAR(80) NOT NULL,\r\n    platformUrl VARCHAR(2048) NOT NULL,\r\n    avatarUrl VARCHAR(2048) NOT NULL,\r\n    websiteUrl VARCHAR(2048) NOT NULL,\r\n    company VARCHAR(80) NOT NULL,\r\n    email VARCHAR(254) NOT NULL,\r\n    username VARCHAR(80) NOT NULL,\r\n    fullName VARCHAR(80) NOT NULL,\r\n    createdAt DATE NOT NULL,\r\n    location VARCHAR(80) NULL,\r\n    statusMessage VARCHAR(80) NULL,\r\n    statusEmojiHTML VARCHAR(80) NULL,\r\n    PRIMARY KEY (id)\r\n);\r\n`;\r\n\r\nexport const organization = `\r\nDROP TABLE IF EXISTS organization;\r\nCREATE TABLE IF NOT EXISTS organization (\r\n    id INT NOT NULL AUTO_INCREMENT,\r\n    avatarUrl VARCHAR(2048) NOT NULL,\r\n    name VARCHAR(80) NOT NULL,\r\n    url VARCHAR(2048) NOT NULL,\r\n    PRIMARY KEY (id)\r\n);\r\n`;\r\n\r\nexport const member = `\r\nDROP TABLE IF EXISTS member;\r\nCREATE TABLE IF NOT EXISTS member (\r\n    id INT NOT NULL AUTO_INCREMENT,\r\n    avatarUrl VARCHAR(2048) NOT NULL,\r\n    name VARCHAR(80) NULL,\r\n    username VARCHAR(80) NOT NULL,\r\n    url VARCHAR(2048) NOT NULL,\r\n    PRIMARY KEY (id)\r\n);\r\n`;\r\n\r\nexport const languagePie = `\r\nDROP TABLE IF EXISTS languagePie;\r\nCREATE TABLE IF NOT EXISTS languagePie (\r\n    id INT NOT NULL AUTO_INCREMENT,\r\n    size INT NOT NULL,\r\n    total INT NOT NULL,\r\n    PRIMARY KEY (id)\r\n);\r\n`;\r\n\r\nexport const repository = `\r\nDROP TABLE IF EXISTS repository;\r\nCREATE TABLE IF NOT EXISTS repository (\r\n    id INT NOT NULL AUTO_INCREMENT,\r\n    avatarUrl VARCHAR(2048) NOT NULL,\r\n    url VARCHAR(2048) NOT NULL,\r\n    name VARCHAR(80) NOT NULL,\r\n    owner_id INT NULL,\r\n    languagePie_id INT NULL,\r\n    PRIMARY KEY (id),\r\n    CONSTRAINT fk_repository_owner1\r\n        FOREIGN KEY (owner_id)\r\n        REFERENCES member (id),\r\n    CONSTRAINT fk_repository_languagePie1\r\n        FOREIGN KEY (languagePie_id)\r\n        REFERENCES languagePie (id)\r\n);\r\n`;\r\n\r\nexport const languageSlice = `\r\nDROP TABLE IF EXISTS languageSlice;\r\nCREATE TABLE IF NOT EXISTS languageSlice (\r\n    id INT UNSIGNED NOT NULL AUTO_INCREMENT,\r\n    color VARCHAR(7) NULL,\r\n    name VARCHAR(80) NOT NULL,\r\n    size INT NOT NULL,\r\n    pie_id INT NOT NULL,\r\n    PRIMARY KEY (id),\r\n    CONSTRAINT fk_pie_id\r\n        FOREIGN KEY (pie_id)\r\n        REFERENCES languagePie (id)\r\n);\r\n`;\r\n\r\nexport const statistic = `\r\nDROP TABLE IF EXISTS statistic;\r\nCREATE TABLE IF NOT EXISTS statistic (\r\n    id INT NOT NULL AUTO_INCREMENT,\r\n    year INT NOT NULL,\r\n    platform_id INT NOT NULL,\r\n    PRIMARY KEY (id),\r\n    CONSTRAINT fk_statistic_platform\r\n        FOREIGN KEY (platform_id)\r\n        REFERENCES platform (id)\r\n);\r\n`;\r\n\r\nexport const streak = `\r\nDROP TABLE IF EXISTS streak ;\r\nCREATE TABLE IF NOT EXISTS streak (\r\n    id INT NOT NULL AUTO_INCREMENT,\r\n    startDate DATE NULL,\r\n    endDate DATE NULL,\r\n    total INT NULL,\r\n    statistic_id INT NOT NULL REFERENCES statistic(id),\r\n    PRIMARY KEY (id)\r\n);\r\n`;\r\n\r\nexport const calendar = `\r\nDROP TABLE IF EXISTS calendar;\r\nCREATE TABLE IF NOT EXISTS calendar (\r\n    id INT NOT NULL AUTO_INCREMENT,\r\n    date DATE NOT NULL,\r\n    week INT NOT NULL,\r\n    weekday INT NOT NULL,\r\n    total INT NOT NULL,\r\n    color VARCHAR(7) NULL,\r\n    platform_id INT NOT NULL,\r\n    PRIMARY KEY (id),\r\n    CONSTRAINT fk_calendar_platform1\r\n        FOREIGN KEY (platform_id)\r\n        REFERENCES platform (id)\r\n);\r\n`;\r\n\r\nexport const contrib = `\r\nDROP TABLE IF EXISTS contrib;\r\nCREATE TABLE IF NOT EXISTS contrib (\r\n    id INT NOT NULL AUTO_INCREMENT,\r\n    datetime DATETIME NOT NULL,\r\n    nameWithOwner VARCHAR(255) NOT NULL,\r\n    repoUrl VARCHAR(255) NOT NULL,\r\n    additions INT NULL,\r\n    deletions INT NULL,\r\n    changedFiles INT NULL,\r\n    type VARCHAR(255) NOT NULL,\r\n    calendar_id INT NOT NULL,\r\n    PRIMARY KEY (id),\r\n    CONSTRAINT fk_contrib_calendar1\r\n        FOREIGN KEY (calendar_id)\r\n        REFERENCES calendar (id)\r\n);\r\n`;\r\n\r\nexport const organizationHasMember = `\r\nDROP TABLE IF EXISTS organization_has_member ;\r\nCREATE TABLE IF NOT EXISTS organization_has_member (\r\n    organization_id INT NOT NULL,\r\n    member_id INT NOT NULL,\r\n    PRIMARY KEY (organization_id, member_id),\r\n    CONSTRAINT fk_organization_has_member_organization1\r\n        FOREIGN KEY (organization_id)\r\n        REFERENCES organization (id),\r\n    CONSTRAINT fk_organization_has_member_member1\r\n        FOREIGN KEY (member_id)\r\n        REFERENCES member (id)\r\n);\r\n`;\r\n\r\nexport const repositoryHasMember = `\r\nDROP TABLE IF EXISTS repository_has_member;\r\nCREATE TABLE IF NOT EXISTS repository_has_member (\r\n    repository_id INT NOT NULL,\r\n    member_id INT NOT NULL,\r\n    PRIMARY KEY (repository_id, member_id),\r\n    CONSTRAINT fk_repository_has_member_repository1\r\n        FOREIGN KEY (repository_id)\r\n        REFERENCES repository (id),\r\n    CONSTRAINT fk_repository_has_member_member1\r\n        FOREIGN KEY (member_id)\r\n        REFERENCES member (id)\r\n);\r\n`;\r\n\r\nexport const platformHasOrganization = `\r\nDROP TABLE IF EXISTS platform_has_organization;\r\nCREATE TABLE IF NOT EXISTS platform_has_organization (\r\n    platform_id INT NOT NULL,\r\n    organization_id INT NOT NULL,\r\n    PRIMARY KEY (platform_id, organization_id),\r\n    CONSTRAINT fk_platform_has_organization_platform1\r\n        FOREIGN KEY (platform_id)\r\n        REFERENCES platform (id),\r\n    CONSTRAINT fk_platform_has_organization_organization1\r\n        FOREIGN KEY (organization_id)\r\n        REFERENCES organization (id)\r\n);\r\n`;\r\n\r\nexport const platformHasRepository = `\r\nDROP TABLE IF EXISTS platform_has_repository ;\r\nCREATE TABLE IF NOT EXISTS platform_has_repository (\r\n    platform_id INT NOT NULL,\r\n    repository_id INT NOT NULL,\r\n    PRIMARY KEY (platform_id, repository_id),\r\n    CONSTRAINT fk_platform_has_repository_platform1\r\n        FOREIGN KEY (platform_id)\r\n        REFERENCES platform (id),\r\n    CONSTRAINT fk_platform_has_repository_repository1\r\n        FOREIGN KEY (repository_id)\r\n        REFERENCES repository (id)\r\n);\r\n`;\r\n\r\n/**\r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","export const platform = `\r\nINSERT INTO platform(\r\n    platformName,\r\n    platformUrl,\r\n    avatarUrl,\r\n    websiteUrl,\r\n    company,\r\n    email,\r\n    username,\r\n    fullName,\r\n    createdAt,\r\n    location,\r\n    statusMessage,\r\n    statusEmojiHTML\r\n)\r\nVALUES (?,?,?,?,?,?,?,?,?,?,?,?);\r\n`;\r\n\r\nexport const organization = `\r\nINSERT INTO organization(\r\n    avatarUrl,\r\n    name,\r\n    url\r\n)\r\nVALUES (?,?,?);\r\n`;\r\n\r\nexport const member = `\r\nINSERT INTO member(\r\n    avatarUrl,\r\n    name,\r\n    username,\r\n    url\r\n)\r\nVALUES (?,?,?,?);\r\n`;\r\n\r\nexport const languagePie = `\r\nINSERT INTO languagePie(\r\n    size,\r\n    total\r\n)\r\nVALUES (?,?);\r\n`;\r\n\r\nexport const repository = `\r\nINSERT INTO repository(\r\n    avatarUrl,\r\n    url,\r\n    name,\r\n    owner_id,\r\n    languagePie_id\r\n)\r\nVALUES (?,?,?,?,?);\r\n`;\r\n\r\nexport const languageSlice = `\r\nINSERT INTO languageSlice(\r\n    name,\r\n    color,\r\n    size,\r\n    pie_id\r\n)\r\nVALUES (?,?,?,?);\r\n`;\r\n\r\nexport const statistic = `\r\nINSERT INTO statistic(\r\n    year,\r\n    platform_id\r\n)\r\nVALUES (?,?);\r\n`;\r\n\r\nexport const streak = `\r\nINSERT INTO streak(\r\n    startDate,\r\n    endDate,\r\n    total,\r\n    statistic_id\r\n)\r\nVALUES (?,?,?,?);\r\n`;\r\n\r\nexport const calendar = `\r\nINSERT INTO calendar(\r\n    date,\r\n    week,\r\n    weekday,\r\n    total,\r\n    color,\r\n    platform_id\r\n)\r\nVALUES (?,?,?,?,?,?);\r\n`;\r\n\r\nexport const contrib = `\r\nINSERT INTO contrib(\r\n    datetime,\r\n    nameWithOwner,\r\n    repoUrl,\r\n    additions,\r\n    deletions,\r\n    changedFiles,\r\n    type,\r\n    calendar_id\r\n)\r\nVALUES (?,?,?,?,?,?,?,?);\r\n`;\r\n\r\nexport const platformHasOrganization = `\r\nINSERT INTO platform_has_organization(\r\n    platform_id,\r\n    organization_id\r\n)\r\nVALUES (?,?);\r\n`;\r\n\r\nexport const platformHasRepository = `\r\nINSERT INTO platform_has_repository(\r\n    platform_id,\r\n    repository_id\r\n)\r\nVALUES (?,?);\r\n`;\r\n\r\nexport const organizationHasMember = `\r\nINSERT INTO organization_has_member(\r\n    organization_id,\r\n    member_id\r\n)\r\nVALUES (?,?);\r\n`;\r\n\r\nexport const repositoryHasMember = `\r\nINSERT INTO repository_has_member(\r\n    repository_id,\r\n    member_id\r\n)\r\nVALUES (?,?);\r\n`;\r\n\r\n/**\r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","//> Database\r\n// Insert statements\r\nimport * as insert from \"../../Database/Statements/Insert\";\r\n// Update statements\r\nimport * as update from \"../../Database/Statements/Update\";\r\n// Get html data from websites\r\nimport * as webscrap from \"../UtilsWebscrap\";\r\nlet db;\r\n\r\n//> Helper functions\r\n// Get calendar week from date\r\nDate.prototype.getWeekNumber = function() {\r\n  var d = new Date(\r\n    Date.UTC(this.getFullYear(), this.getMonth(), this.getDate())\r\n  );\r\n  var dayNum = d.getUTCDay() || 7;\r\n  d.setUTCDate(d.getUTCDate() + 4 - dayNum);\r\n  var yearStart = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\r\n  return Math.ceil(((d - yearStart) / 864e5 + 1) / 7);\r\n};\r\n\r\n//> Fill functions\r\n// Fill the platform table with data\r\nconst fillPlatform = async (user) => {\r\n  const url = `https://${user.server}/${user.username}`;\r\n  const html = await webscrap.parseTextToDOM(\r\n    webscrap.fetchHtml(url).then((html) => {\r\n      return html;\r\n    })\r\n  );\r\n  const status = html.getElementsByTagName(\"gl-emoji\")[0];\r\n  const coverDesc = html\r\n    .getElementsByClassName(\"cover-desc\")[0]\r\n    .getElementsByTagName(\"span\");\r\n\r\n  const coverTitle = html.getElementsByClassName(\"cover-title\")[0];\r\n  let avatarUrl = html\r\n    .getElementsByClassName(\"avatar-holder\")[0]\r\n    .getElementsByTagName(\"a\")[0]\r\n    .getAttribute(\"href\");\r\n  const links = html.getElementsByClassName(\"profile-link-holder\")[0];\r\n  const message = null;\r\n  const emojiHTML = null;\r\n  const fullName = coverDesc[0].innerHTML.trim().substring(1);\r\n  const date = coverDesc[1].innerHTML;\r\n\r\n  if (avatarUrl) {\r\n    if (!avatarUrl.includes(\"https://\") || !avatarUrl.includes(\"http://\")) {\r\n      avatarUrl = `https://${user.server}/${avatarUrl.substring(1)}`;\r\n    }\r\n  }\r\n\r\n  const createdAt = new Date(date);\r\n\r\n  db.exec(insert.platform, [\r\n    user.source,\r\n    url,\r\n    avatarUrl,\r\n    null,\r\n    null,\r\n    null,\r\n    user.username,\r\n    fullName,\r\n    createdAt,\r\n    null,\r\n    message,\r\n    emojiHTML\r\n  ]);\r\n};\r\n\r\nconst fillOrganizations = async (user) => {\r\n  const url = `https://${user.server}/users/${user.username}/groups.json`;\r\n  const html = await webscrap.parseJsonToDOM(\r\n    webscrap.fetchJson(url).then((html) => {\r\n      return html;\r\n    })\r\n  );\r\n\r\n  const rows = html.getElementsByClassName(\"group-row\");\r\n\r\n  for (const _org of Array.from(rows)) {\r\n    let avatarUrl = _org\r\n      .getElementsByClassName(\"avatar\")[0]\r\n      .getAttribute(\"data-src\");\r\n    const name = _org\r\n      .getElementsByClassName(\"group-name\")[0]\r\n      .getAttribute(\"href\")\r\n      .substring(1);\r\n    let orgUrl = `https://${user.server}/${name}`;\r\n\r\n    if (avatarUrl) {\r\n      if (!avatarUrl.includes(\"https://\") || !avatarUrl.includes(\"http://\")) {\r\n        avatarUrl = `https://${user.server}/${avatarUrl.substring(1)}`;\r\n      }\r\n    }\r\n\r\n    db.exec(insert.organization, [avatarUrl, name, orgUrl]);\r\n\r\n    var idPlatform = db.exec(\"SELECT id FROM platform\").pop()[\"id\"];\r\n    var idOrganization = db.exec(\"SELECT id FROM organization\").pop()[\"id\"];\r\n\r\n    db.exec(insert.platformHasOrganization, [idPlatform, idOrganization]);\r\n  }\r\n};\r\n\r\n// const fillDummy = () => {\r\n//   db.exec(insert.member, [\r\n//     \"https://snek.at/users/trash/avatar\",\r\n//     \"Trash The User\",\r\n//     \"trash\",\r\n//     \"https://snek.at/users/trash\"\r\n//   ]);\r\n//   db.exec(insert.languagePie, [-1, -1]);\r\n// };\r\n\r\nconst fillRepositories = (user, nameWithOwner) => {\r\n  let repository = {};\r\n  repository.repoUrl = `https://${user.server}/${nameWithOwner}`;\r\n  repository.avatarUrl = `https://${user.server}/${nameWithOwner}/-/avatar`;\r\n  repository.name = nameWithOwner;\r\n  repository.ownerId = db.exec(\"SELECT id FROM member\").pop();\r\n  repository.languagePieId = db.exec(\"SELECT id FROM languagePie\").pop();\r\n\r\n  if(repository.ownerId){\r\n    repository.ownerId = repository.ownerId.id;\r\n  }\r\n\r\n  if(repository.languagePieId){\r\n    repository.languagePieId = repository.languagePieId.id;\r\n  }\r\n\r\n  const repoExists = db.exec(\r\n    `SELECT id FROM repository WHERE name=\"${repository.name}\"`\r\n  );\r\n  if (repoExists === undefined || repoExists.length === 0) {\r\n    db.exec(insert.repository, [\r\n      repository.avatarUrl,\r\n      repository.repoUrl,\r\n      repository.name,\r\n      repository.ownerId,\r\n      repository.languagePieId\r\n    ]);\r\n\r\n    const platformId = db.exec(\"SELECT id FROM platform\").pop()[\"id\"];\r\n    const repositoryId = db.exec(\"SELECT id FROM repository\").pop()[\"id\"];\r\n\r\n    db.exec(insert.platformHasRepository, [platformId, repositoryId]);\r\n  }\r\n  return repository;\r\n};\r\n\r\nconst fillContribution = (user, item) => {\r\n  let type;\r\n  if (item.innerHTML.includes(\"pushed to branch\")) {\r\n    type = \"commit\";\r\n  } else if (item.innerHTML.includes(\"opened\")) {\r\n    type = \"issue\";\r\n  } else if (item.innerHTML.includes(\"Merge branch\")) {\r\n    type = \"pullRequest\";\r\n  }\r\n\r\n  let datetime = item.getElementsByTagName(\"time\")[0].getAttribute(\"datetime\");\r\n  datetime = new Date(datetime);\r\n\r\n  let nameWithOwner = item\r\n    .getElementsByClassName(\"event-scope\")[0]\r\n    .getElementsByTagName(\"a\")[0]\r\n    .getAttribute(\"href\");\r\n  nameWithOwner = nameWithOwner.substring(1);\r\n\r\n  const repository = fillRepositories(user, nameWithOwner);\r\n  const calendarId = db.exec(\"SELECT id FROM calendar\").pop()[\"id\"];\r\n  db.exec(insert.contrib, [\r\n    datetime,\r\n    nameWithOwner,\r\n    repository.repoUrl,\r\n    null,\r\n    null,\r\n    null,\r\n    type,\r\n    calendarId\r\n  ]);\r\n};\r\n\r\nconst fillCalendar = async (user) => {\r\n  const limit = \"2147483647\";\r\n  const url = `https://${user.server}/${user.username}?limit=${limit}`;\r\n\r\n  const html = await webscrap.parseJsonToDOM(\r\n    webscrap.fetchJson(url).then((html) => {\r\n      return html;\r\n    })\r\n  );\r\n\r\n  const activities = html.getElementsByClassName(\"event-item\");\r\n  for (const item of Array.from(activities)) {\r\n    if (\r\n      item.innerHTML.includes(\"pushed to branch\") ||\r\n      item.innerHTML.includes(\"opened\") ||\r\n      item.innerHTML.includes(\"Merge branch\")\r\n    ) {\r\n      let datetime = item\r\n        .getElementsByTagName(\"time\")[0]\r\n        .getAttribute(\"datetime\");\r\n      datetime = new Date(datetime);\r\n      let date = `${datetime.getFullYear()}-${datetime.getMonth()+1}-${datetime.getDate()}`;\r\n      let week = datetime.getWeekNumber().toString();\r\n      let weekday = datetime.getDay().toString();\r\n\r\n      const platformId = db.exec(\"SELECT id FROM platform\").pop()[\"id\"];\r\n      const statYear = db.exec(\"SELECT year FROM statistic\").pop();\r\n\r\n      let year = datetime.getFullYear();\r\n\r\n      if(!statYear){\r\n        db.exec(insert.statistic, [year,platformId]);\r\n      }\r\n\r\n      let res = db\r\n        .exec(`SELECT total FROM calendar WHERE date=\"${date}\"`)\r\n        .pop();\r\n      //console.log(total)\r\n      if (res === undefined || res.length === 0) {\r\n        db.exec(insert.calendar, [date, week, weekday, 1, null, platformId]);\r\n      } else {\r\n        let total = res.total;\r\n        total++;\r\n        db.exec(update.calendarTotal, [total, date, platformId]);\r\n      }\r\n\r\n      fillContribution(user, item);\r\n    }\r\n  }\r\n};\r\n\r\n//> Export functions\r\n// Fill the Database from user object\r\nexport const fill = (_db, user) => {\r\n  db = _db;\r\n  return fillPlatform(user).then(\r\n    async () => await fillOrganizations(user).then(await fillCalendar(user))\r\n  );\r\n};\r\n\r\n/**\r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","//> Send request functions\r\n// Proxy to bypass CORS\r\nconst proxy = \"https://cors-anywhere.herokuapp.com/\";\r\n\r\n// Fetch JSON from url\r\nexport const fetchJson = (urlIn) => {\r\n  const url = `${proxy}${urlIn}`;\r\n  return fetch(url, {\r\n    headers: {\r\n      Accept: \"application/json, text/plain, */*\",\r\n      \"X-Requested-With\": \"XMLHttpRequest\"\r\n    }\r\n  })\r\n    .then((res) => res.json())\r\n    .then((res) => {\r\n      return res;\r\n    });\r\n};\r\n\r\n// Fetch HTML from url\r\nexport const fetchHtml = (urlIn) => {\r\n  const url = `${proxy}${urlIn}`;\r\n  return fetch(url, {\r\n    headers: {\r\n      Accept: \"application/json, text/plain, */*\"\r\n    }\r\n  })\r\n    .then((res) => res.text())\r\n    .then((res) => {\r\n      return res;\r\n    });\r\n};\r\n\r\n//> Parser functions\r\n// Parse Json to DOM Object\r\nexport const parseJsonToDOM = (json) => {\r\n  const parser = new DOMParser();\r\n  const html = json.then((res) => {\r\n    return parser.parseFromString(res.html, \"text/html\");\r\n  });\r\n  return html;\r\n};\r\n\r\n//Parse plain text to DOM Object\r\nexport const parseTextToDOM = (json) => {\r\n  const parser = new DOMParser();\r\n  const html = json.then((res) => {\r\n    return parser.parseFromString(res, \"text/html\");\r\n  });\r\n  return html;\r\n};\r\n\r\n/**\r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","// Apollo\r\nimport { ApolloClient } from \"apollo-client\";\r\nimport { HttpLink } from \"apollo-link-http\";\r\nimport {\r\n  InMemoryCache,\r\n  IntrospectionFragmentMatcher\r\n} from \"apollo-cache-inmemory\";\r\n\r\nlet LINK;\r\nlet cache;\r\n\r\nexport const init = (apiLink, authorization) => {\r\n  // Cache setup\r\n  const fragmentMatcher = new IntrospectionFragmentMatcher({\r\n    introspectionQueryResultData: {\r\n      __schema: {\r\n        types: [] // no types provided - works like a charm.ing\r\n      }\r\n    }\r\n  });\r\n  cache = new InMemoryCache({ fragmentMatcher });\r\n\r\n  // Created HttpLink\r\n  LINK = new HttpLink({\r\n    uri: apiLink,\r\n    headers: {\r\n      authorization\r\n    }\r\n  });\r\n  // Apollo client setup\r\n  const client = new ApolloClient({\r\n    cache,\r\n    link: LINK\r\n  });\r\n  return client;\r\n};\r\n\r\n/**\r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","export const calendarTotal = `\r\nUPDATE calendar\r\nSET total = ?\r\nWHERE date = ? AND platform_id = ?\r\n`;\r\n\r\n/**\r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","// A tool to save a graphql query into a variable\r\nimport { gql } from \"apollo-boost\";\r\n\r\n// Structure GQL profile code\r\nexport const GET_PROFILE = gql`\r\n  query getData($username: String!) {\r\n    user(login: $username) {\r\n      avatarUrl\r\n      company\r\n      createdAt\r\n      name\r\n      login\r\n      email\r\n      websiteUrl\r\n      hovercard {\r\n        contexts {\r\n          message\r\n          octicon\r\n        }\r\n      }\r\n      isEmployee\r\n      isHireable\r\n      location\r\n      status {\r\n        emojiHTML\r\n        expiresAt\r\n        message\r\n        updatedAt\r\n      }\r\n      organizations(first: 100) {\r\n        pageInfo {\r\n          endCursor\r\n          hasNextPage\r\n        }\r\n        edges {\r\n          node {\r\n            name\r\n            url\r\n            avatarUrl\r\n            name\r\n            membersWithRole(first: 100) {\r\n              totalCount\r\n              nodes {\r\n                name\r\n                login\r\n                avatarUrl\r\n                url\r\n                projectsUrl\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// Structure GQL calendar code\r\nconst getCalendarQueryPart = (fromYear, toYear, c) => {\r\n  //console.log(fromYear,toYear)\r\n  return `\r\n  c${c}: contributionsCollection(from:\"${fromYear}\", to:\"${toYear}\" ){\r\n    contributionYears\r\n    contributionCalendar{\r\n        totalContributions\r\n        weeks{\r\n          contributionDays{\r\n            contributionCount\r\n            date\r\n            color\r\n          }\r\n        }\r\n      }\r\n      commitContributionsByRepository {\r\n        url\r\n        repository {\r\n          defaultBranchRef{\r\n            target{\r\n              ... on Commit{\r\n                changedFiles\r\n                additions\r\n                deletions\r\n                committedDate\r\n                history{\r\n                  totalCount\r\n                  pageInfo{\r\n                    endCursor\r\n                  }\r\n                  nodes{\r\n                    committer{\r\n                      user{\r\n                        login\r\n                      }\r\n                    }\r\n                    committedDate\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n          openGraphImageUrl\r\n          name\r\n          nameWithOwner\r\n          url\r\n          owner{\r\n            avatarUrl\r\n            login\r\n            url\r\n          }\r\n          languages(first: 50, orderBy: {field: SIZE, direction: DESC}) {\r\n            totalCount\r\n            totalSize\r\n            edges {\r\n              size\r\n              node {\r\n                name\r\n                color\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      issueContributionsByRepository {\r\n        repository {\r\n          issues(first:100) {\r\n            nodes{\r\n              createdAt\r\n              author{\r\n                login\r\n              }\r\n            }\r\n          }\r\n          openGraphImageUrl\r\n          name\r\n          nameWithOwner\r\n          url\r\n          owner{\r\n            avatarUrl\r\n            login\r\n            url\r\n          }\r\n          languages(first: 50, orderBy: {field: SIZE, direction: DESC}){\r\n            totalCount\r\n            totalSize\r\n            edges {\r\n              size\r\n              node {\r\n                name\r\n                color\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      pullRequestContributionsByRepository {\r\n        repository {\r\n          pullRequests(first:100) {\r\n            nodes{\r\n              changedFiles\r\n              additions\r\n              deletions\r\n              createdAt\r\n              author{\r\n                login\r\n              }\r\n            }\r\n          }\r\n          openGraphImageUrl\r\n          name\r\n          nameWithOwner\r\n          url\r\n          owner{\r\n            avatarUrl\r\n            login\r\n            url\r\n          }\r\n          languages(first: 50, orderBy: {field: SIZE, direction: DESC}){\r\n            totalCount\r\n            totalSize\r\n            edges {\r\n              size\r\n              node {\r\n                name\r\n                color\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `;\r\n};\r\n\r\nconst getRepositoryHistory = (owner, name, cursor, index) => {\r\n  return `\r\n  ${owner.replace(/-/g, \"_\")}${name.replace(/-/g, \"_\")}${index}:repository(owner:\"${owner}\", name:\"${name}\"){\r\n    nameWithOwner\r\n    defaultBranchRef{\r\n      target{\r\n        ... on Commit{\r\n          history (after:\"${cursor} ${99+index*100}\"){\r\n            totalCount\r\n            nodes{\r\n              committer{\r\n                user{\r\n                  login\r\n                }\r\n              }\r\n              committedDate\r\n              changedFiles\r\n              additions\r\n              deletions\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n  }\r\n  `;\r\n};\r\n\r\nexport const generateRepositoryHistoryQuery = (bigRepos) => {\r\n  let queryParts = [] ;\r\n  const queries = [];\r\n  const query = (part) => gql`\r\n                  query\r\n                  {\r\n                      ${part}\r\n                  }\r\n  `;\r\n  bigRepos.forEach((repo) => {\r\n    let runtime = ~~(repo.repository.defaultBranchRef.target.history.totalCount / 100);\r\n    let cursor = repo.repository.defaultBranchRef.target.history.pageInfo.endCursor.split(\" \")[0];\r\n    //console.log(runtime)\r\n    let maxRuntime = 10;\r\n    let partsCount = 0;\r\n    for (let index = 0; index < runtime; index++) {\r\n      if(maxRuntime === 0){\r\n        queries.append(query(queryParts[partsCount]));\r\n        partsCount++;\r\n        maxRuntime = 10;\r\n      }\r\n      queryParts[partsCount] += getRepositoryHistory(repo.repository.owner.login, repo.repository.name, cursor, index);\r\n      \r\n      maxRuntime--;\r\n      //console.log(queryParts)\r\n    }\r\n    //console.log(queryParts)\r\n  });\r\n  //console.log(queryParts)\r\n  \r\n  //console.log(query)\r\n  return queries;\r\n};\r\n// Generates a dynamic query structure\r\nconst generateCalendarsQuery = (username, createdAtDate) => {\r\n  var currentYear = new Date().getFullYear();\r\n\r\n  var fromDate = new Date(createdAtDate.getFullYear(), 0, 2);\r\n  var toDate = new Date(createdAtDate.getFullYear() + 1, 0, 1);\r\n\r\n  var query = \"\";\r\n  var count = 1;\r\n\r\n  while (fromDate.getFullYear() <= currentYear) {\r\n    query += getCalendarQueryPart(fromDate.toJSON(), toDate.toJSON(), count);\r\n    //console.log(fromDate.toJSON());\r\n    //console.log(date.setDate(date.getDate()-1))\r\n\r\n    fromDate.setFullYear(fromDate.getFullYear() + 1);\r\n    toDate.setFullYear(toDate.getFullYear() + 1);\r\n    count++;\r\n  }\r\n  return query;\r\n};\r\n\r\n// Get calendar basic structure\r\nexport const getCalendar = (username, createdAt) => {\r\n  const query = gql`\r\n    query\r\n      {\r\n        user(login: \"${username}\") {\r\n            ${generateCalendarsQuery(username, createdAt)}\r\n        }\r\n      }\r\n  `;\r\n  return query;\r\n};\r\n\r\n/**\r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","import * as insert from \"../../../Database/Statements/Insert\";\r\nimport { fill } from \"..\";\r\n\r\nlet db;\r\nlet streak = false;\r\nlet streakStart = \"\";\r\nlet streakTotal = 0;\r\n\r\n//> Helper functions\r\n// Get an Array with Contributions from contributionsByRepository Object\r\nconst genContributionsByRepositories = function* (contributionsByRepository, type, username) {\r\n  for (const repo of contributionsByRepository) {\r\n    switch(type){\r\n      case \"commit\":\r\n        yield repo.repository.defaultBranchRef.target.history.nodes.filter((contrib) => (\r\n        contrib.committer && \r\n        contrib.committer.user && \r\n        contrib.committer.user.login.toLowerCase() === username.toLowerCase())\r\n        ).map((_node) => {\r\n          let con = {};\r\n          con[\"datetime\"] = _node.committedDate;\r\n          con[\"repoNameWithOwner\"] = repo.repository.nameWithOwner;\r\n          con[\"repoUrl\"] = repo.repository.url;\r\n          con[\"additions\"] = repo.repository.defaultBranchRef.target.additions;\r\n          con[\"deletions\"] = repo.repository.defaultBranchRef.target.deletions;\r\n          con[\"changedFiles\"] = repo.repository.defaultBranchRef.target.changedFiles;\r\n          return con;\r\n        });\r\n        break;\r\n      case \"issue\":\r\n        yield repo.repository.issues.nodes.filter((contrib) => (\r\n          contrib.author && \r\n          contrib.author.login && \r\n          contrib.author.login.toLowerCase() === username.toLowerCase())\r\n        ).map((_node) => {\r\n          let con = {};\r\n          con[\"datetime\"] = _node.createdAt;\r\n          con[\"repoNameWithOwner\"] = repo.repository.nameWithOwner;\r\n          con[\"repoUrl\"] = repo.repository.url;\r\n          return con;\r\n        });\r\n        break;\r\n      case \"pullRequest\":\r\n        yield repo.repository.pullRequests.nodes.filter((contrib) => (\r\n          contrib.author &&\r\n          contrib.author.login &&\r\n          contrib.author.login.toLowerCase() === username.toLowerCase())\r\n        ).map((_node) => {\r\n          let con = {};\r\n          con[\"datetime\"] = _node.createdAt;\r\n          con[\"repoNameWithOwner\"] = repo.repository.nameWithOwner;\r\n          con[\"repoUrl\"] = repo.repository.url;\r\n          con[\"additions\"] = _node.additions;\r\n          con[\"deletions\"] = _node.deletions;\r\n          con[\"changedFiles\"] = _node.changedFiles;\r\n          return con;\r\n        });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n};\r\n\r\n// Get an Array of Days from User Object\r\nconst getDaysArray = (objUser, keys) => {\r\n  let days = [];\r\n  keys.forEach((c) => {\r\n    const year = objUser.calendar[c.toString()];\r\n    for (const [w, week] of year.contributionCalendar.weeks.entries()) {\r\n      for (const [d, day] of week.contributionDays.entries()) {\r\n        days.push(day);\r\n      }\r\n    }\r\n  });\r\n  return days;\r\n};\r\n\r\n// Get an Dictionary of Years from Days Array\r\n// Key: year, Value: Array of Days\r\nconst getYearsDict = (days) => {\r\n  let years = {};\r\n  days.forEach((day) => {\r\n    const year = new Date(day.date).getFullYear();\r\n    if (years[parseInt(year)] === undefined) {\r\n      years[parseInt(year)] = [];\r\n    }\r\n    years[parseInt(year)].push(day);\r\n  });\r\n  return years;\r\n};\r\n\r\n//> Fill functions\r\n// Fill the platform Table\r\nconst fillPlatform = (objUser) => {\r\n  let statusMessage;\r\n  let statusEmojiHTML;\r\n\r\n  if (objUser.profile.status) {\r\n    statusMessage = objUser.profile.status.message;\r\n    statusEmojiHTML = objUser.profile.status.emojiHTML;\r\n  } else {\r\n    statusMessage = null;\r\n    statusEmojiHTML = null;\r\n  }\r\n\r\n  const avatarUrl = objUser.profile.avatarUrl;\r\n  const websiteUrl = objUser.profile.websiteUrl;\r\n  const company = objUser.profile.company;\r\n  const email = objUser.profile.email;\r\n  const fullName = objUser.profile.name;\r\n  const createdAt = objUser.profile.createdAt;\r\n  const location = objUser.profile.location;\r\n  const username = objUser.profile.login;\r\n\r\n  db.exec(insert.platform, [\r\n    \"GitHub\",\r\n    \"https://github.com\",\r\n    avatarUrl,\r\n    websiteUrl,\r\n    company,\r\n    email,\r\n    username,\r\n    fullName,\r\n    createdAt,\r\n    location,\r\n    statusMessage,\r\n    statusEmojiHTML\r\n  ]);\r\n};\r\n\r\n// Fill the member Table with Organization Members\r\nconst fillOrgMembers = (nodes, orgId) => {\r\n  nodes.forEach((_member) => {\r\n    const memberAvatarUrl = _member.avatarUrl;\r\n    const memberName = _member.name;\r\n    const memberWebUrl = _member.url;\r\n    const memberUsername = _member.login;\r\n    db.exec(insert.member, [\r\n      memberAvatarUrl,\r\n      memberName,\r\n      memberUsername,\r\n      memberWebUrl\r\n    ]);\r\n    const memberId = db.exec(\"SELECT id FROM member\").pop()[\"id\"];\r\n    db.exec(insert.organizationHasMember, [orgId, memberId]);\r\n  });\r\n};\r\n\r\n// Fill organization Table\r\nconst fillOrganization = (objUser) => {\r\n  objUser.profile.organizations.edges.forEach((_org) => {\r\n    const avatarUrl = _org.node.avatarUrl;\r\n    const name = _org.node.name;\r\n    const url = _org.node.url;\r\n    db.exec(insert.organization, [avatarUrl, name, url]);\r\n\r\n    const organizationId = db.exec(\"SELECT id FROM organization\").pop()[\"id\"];\r\n    const platformId = db.exec(\"SELECT id FROM platform\").pop()[\"id\"];\r\n\r\n    db.exec(insert.platformHasOrganization, [platformId, organizationId]);\r\n    fillOrgMembers(_org.node.membersWithRole.nodes, organizationId);\r\n  });\r\n};\r\n\r\n// Prepare data to call functions related to Stats\r\nconst fillStats = (objUser) => {\r\n  let keys = Object.keys(objUser.calendar).filter((str) => {\r\n    return str.match(/c[0-9]+/);\r\n  });\r\n  const days = getDaysArray(objUser, keys);\r\n  const years = getYearsDict(days);\r\n\r\n  Object.keys(years).forEach((y) => {\r\n    const yearObj = years[parseInt(y)];\r\n    const yearNum = y;\r\n    const platformId = db.exec(\"SELECT id FROM platform\").pop()[\"id\"];\r\n\r\n    db.exec(insert.statistic, [yearNum, platformId]);\r\n\r\n    yearObj.forEach((day) => {\r\n      const dayTotal = day.contributionCount;\r\n      const dayDate = day.date;\r\n\r\n      if (dayTotal !== 0) {\r\n        if (!streak) {\r\n          streak = true;\r\n          streakStart = dayDate;\r\n          streakTotal = dayTotal;\r\n        } else {\r\n          streakTotal += dayTotal;\r\n        }\r\n      } else if (streakTotal !== 0) {\r\n      const statisticId = db.exec(\"SELECT id FROM statistic\").pop()[\"id\"];\r\n      db.exec(insert.streak, [\r\n        new Date(streakStart),\r\n        new Date(new Date(dayDate).getTime() - 24 * 60 * 60 * 1000),\r\n        streakTotal,\r\n        statisticId\r\n      ]);\r\n        streak = false;\r\n        streakStart = \"\";\r\n        streakTotal = 0;\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\n// Fill repository Table\r\nconst fillRepository = (_repo) => {\r\n  const repoOwnerId = db.exec(\"SELECT id FROM member\").pop()[\"id\"];\r\n  const name = _repo.repository.name;\r\n  const repoUrl = _repo.repository.url;\r\n  const avatarUrl = _repo.repository.openGraphImageUrl;\r\n  const pieId = db.exec(\"SELECT id FROM languagePie\").pop()[\"id\"];\r\n  db.exec(insert.repository, [avatarUrl, repoUrl, name, repoOwnerId, pieId]);\r\n  const repoId = db.exec(\"SELECT id FROM repository\").pop()[\"id\"];\r\n  const platformId = db.exec(\"SELECT id FROM platform\").pop()[\"id\"];\r\n  db.exec(insert.platformHasRepository, [platformId, repoId]);\r\n};\r\n\r\n// Fill member Table with Repository Owner\r\nconst fillRepoOwner = (_repo) => {\r\n  const repoOwnerUsername = _repo.repository.owner.login;\r\n  const repoOwnerAvatarUrl = _repo.repository.owner.avatarUrl;\r\n  const repoOwnerName = _repo.repository.owner.name;\r\n  const repoOwnerUrl = _repo.repository.owner.url;\r\n  db.exec(insert.member, [\r\n    repoOwnerAvatarUrl,\r\n    repoOwnerName,\r\n    repoOwnerUsername,\r\n    repoOwnerUrl\r\n  ]);\r\n  fillRepository(_repo);\r\n};\r\n\r\n// Fill languageSlice Table\r\nconst fillLanguageSlice = (_repo) => {\r\n  const pieId = db.exec(\"SELECT id FROM languagePie\").pop()[\"id\"];\r\n  _repo.repository.languages.edges.forEach((_edge) => {\r\n    const nodeName = _edge.node.name;\r\n    const nodeSize = _edge.size;\r\n    const nodeColor = _edge.node.color;\r\n    db.exec(insert.languageSlice, [nodeName, nodeColor, nodeSize, pieId]);\r\n  });\r\n  fillRepoOwner(_repo);\r\n};\r\n\r\n// Fill languagePie Table\r\nconst fillPie = (reposi) => {\r\n  reposi.forEach((_repo) => {\r\n    if (\r\n      db.exec(\"SELECT url from repository WHERE url=?\", [\r\n        _repo.repository.url\r\n      ])[0] === undefined\r\n    ) {\r\n      const languagesCount = _repo.repository.languages.totalCount;\r\n      const languagesSize = _repo.repository.languages.totalSize;\r\n      db.exec(insert.languagePie, [languagesSize, languagesCount]);\r\n      fillLanguageSlice(_repo);\r\n    }\r\n  });\r\n};\r\n\r\n// Prepare data to call Tables related to Repositories\r\nconst fillRepos = (objUser) => {\r\n  let keys = Object.keys(objUser.calendar).filter((str) => {\r\n    return str.match(/c[0-9]+/);\r\n  });\r\n  keys.forEach((c) => {\r\n    const reposi =\r\n      objUser.calendar[c.toString()].commitContributionsByRepository;\r\n    fillPie(reposi);\r\n  });\r\n};\r\n\r\n// Fill contribs Table\r\nconst fillContribs = (contribs, type, calendarId) => {\r\n  contribs.forEach((contrib) => {\r\n    db.exec(insert.contrib, [\r\n      contrib.datetime,\r\n      contrib.repoNameWithOwner,\r\n      contrib.repoUrl,\r\n      contrib.additions,\r\n      contrib.deletions,\r\n      contrib.changedFiles,\r\n      type,\r\n      calendarId\r\n    ]);\r\n  });\r\n};\r\n\r\n// fill calendar Table\r\nconst fillCalendar = (objUser) => {\r\n  let keys = Object.keys(objUser.calendar).filter((str) => {\r\n    return str.match(/c[0-9]+/);\r\n  });\r\n\r\n  const user = db.exec(\"SELECT username FROM platform\").pop()[\"username\"];\r\n\r\n  keys.forEach((c) => {\r\n    const year = objUser.calendar[c.toString()];\r\n\r\n    let octoCats = [];\r\n    for (const [w, week] of year.contributionCalendar.weeks.entries()) {\r\n      for (const [d, day] of week.contributionDays.entries()) {\r\n        const datetime = day.date;\r\n        const date = datetime.split(\"T\")[0];\r\n        const week = w;\r\n        const weekday = d;\r\n        const total = day.contributionCount;\r\n        const color = day.color;\r\n        \r\n        let count = total;\r\n\r\n        if (total >= 0) {\r\n          const platformId = db.exec(\"SELECT id FROM platform\").pop()[\"id\"];\r\n\r\n          db.exec(insert.calendar, [\r\n            date,\r\n            week,\r\n            weekday,\r\n            total,\r\n            color,\r\n            platformId\r\n          ]);\r\n          const calendarId = db.exec(\"SELECT id FROM calendar\").pop()[\"id\"];\r\n\r\n          if (count >= 0) {\r\n            octoCats.push({\r\n              datetime: new Date(datetime),\r\n              total: count,\r\n              calendarId\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n    const addOctocat = (cat) => {\r\n      let dDay = [];\r\n        for (let index = 0; index < cat.total; index++) {\r\n          dDay.push({\r\n            datetime: cat.datetime,\r\n            repoNameWithOwner: \"octocat\",\r\n            repoUrl: \"https://github.com/octocat\",\r\n            additions: 0,\r\n            deletions: 0,\r\n            changedFiles: 0,\r\n          });\r\n        }\r\n        fillContribs(dDay, \"codeReviews\", cat.calendarId);\r\n    };\r\n\r\n    octoCats.forEach((cat) => {\r\n        addOctocat(cat);\r\n    });\r\n  });\r\n};\r\n\r\n// Fill the Database from User Object\r\nexport const fillDB = (_db, objUser) => {\r\n  db = _db;\r\n  fillPlatform(objUser);\r\n  fillOrganization(objUser);\r\n  fillStats(objUser);\r\n  fillRepos(objUser);\r\n  fillCalendar(objUser);\r\n};\r\n\r\n/**\r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","//> Apollo \r\nimport * as apollo from \"./../UtilsApollo\";\r\n// Queries for Apollo\r\nimport * as gqlData from \"./GqlData\";\r\n// Used to put data to database\r\nimport * as translator from \"./Translator\";\r\n\r\n// Get profile and calendar\r\nexport async function fill(db, user) {\r\n  const getPlatform = async (db, username) => {\r\n    const apiLink = \"https://api.github.com/graphql\";\r\n    const authorization = `Bearer ${user.token}`;\r\n    const client = apollo.init(apiLink, authorization);\r\n    const resProfile = await client.query({\r\n      query: gqlData.GET_PROFILE,\r\n      variables: {\r\n        username\r\n      }\r\n    });\r\n\r\n    const { data } = resProfile;\r\n\r\n    // Debugging point\r\n    //console.log(\"PROFILE DATA\", data);\r\n    const createdAtDate = new Date(data.user.createdAt);\r\n\r\n    const resCalendar = await client.query({\r\n      query: gqlData.getCalendar(username, createdAtDate)\r\n    });\r\n\r\n    // Debugging point\r\n    //console.log(resCalendar.data.user);\r\n\r\n    let allReposWithHistory = {};\r\n    let reposPerName = {};\r\n    Object.values(resCalendar.data.user).forEach((c) => {\r\n      if(c !== \"User\"){\r\n        c.commitContributionsByRepository.forEach((repo) => {\r\n          if(repo.repository.defaultBranchRef.target.history.totalCount >= 100){\r\n            reposPerName[repo.repository.nameWithOwner] = repo;\r\n            \r\n          }\r\n          allReposWithHistory[repo.repository.nameWithOwner] = repo;\r\n        });\r\n      }\r\n\r\n    });\r\n\r\n    // Debugging point\r\n    //console.log(\"allReposHistory\",allReposWithHistory)\r\n    \r\n    const objUser = {};\r\n    objUser.profile = resProfile.data.user;\r\n    objUser.calendar = resCalendar.data.user;\r\n\r\n    translator.fillDB(db, objUser);\r\n\r\n  };\r\n  await getPlatform(db, user[\"username\"]);\r\n}\r\n\r\n/**\r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","import { Database } from \"../Database\";\r\nimport * as gitlab from \"../utils/UtilsGitlab\";\r\nimport * as github from \"../utils/UtilsGithub\";\r\n\r\nlet db = new Database(\"data\");\r\n\r\nexport const exec = (statement, values) => {\r\n  return db.exec(statement, values);\r\n};\r\n\r\nexport async function fill(user) {\r\n  if (user.source === \"github\") {\r\n    await github.fill(db, user);\r\n  } else if (user.source === \"gitlab\") {\r\n    await gitlab.fill(db, user);\r\n  }\r\n}\r\n\r\n/**\r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","export const platform = `\r\nSELECT * FROM platform\r\n`;\r\n\r\nexport const organization = `\r\nSELECT\r\n  member.id as mId,\r\n  member.avatarUrl as mAvatarUrl,\r\n  member.name as mName,\r\n  member.username as mUsername,\r\n  member.url as mUrl,\r\n  organization.id as oId,\r\n  organization.avatarUrl as oAvatarUrl,\r\n  organization.name as oName,\r\n  organization.url as oUrl\r\nFROM\r\n  organization\r\nLEFT OUTER JOIN\r\n  organization_has_member\r\n    ON organization.id = organization_has_member.organization_id\r\nLEFT OUTER JOIN\r\n  member\r\n    ON member.id = organization_has_member.member_id\r\n`;\r\n\r\nexport const repository = `\r\nSELECT\r\n  repository.id as rId,\r\n  repository.avatarUrl as rAvatarUrl,\r\n  repository.url as rUrl,\r\n  repository.name as rName,\r\n  repository.languagePie_id as rLanguagePieId,\r\n  owner.avatarUrl as oAvatarUrl,\r\n  owner.name as oName,\r\n  owner.username as oUsername,\r\n  owner.url as oUrl,\r\n  member.id as mId,\r\n  member.avatarUrl as mAvatarUrl,\r\n  member.name as mName,\r\n  member.username as mUsername,\r\n  member.url as mUrl,\r\n  languagePie.id as lId,\r\n  languagePie.size as lSize,\r\n  languagePie.total as lTotal,\r\n  languageSlice.id as sId,\r\n  languageSlice.color as sColor,\r\n  languageSlice.name as sName,\r\n  languageSlice.size as sSize,\r\n  languageSlice.pie_id as sPieId\r\nFROM\r\n  repository\r\nLEFT OUTER JOIN \r\n  member as owner\r\n    ON owner.id = repository.owner_id\r\nLEFT OUTER JOIN\r\n    languagePie\r\n      ON languagePie.id = repository.languagePie_id\r\nLEFT OUTER JOIN \r\n  languageSlice\r\n      ON languageSlice.pie_id = languagePie.id\r\nLEFT OUTER JOIN\r\n  repository_has_member\r\n    ON repository.id = repository_has_member.repository_id\r\nLEFT OUTER JOIN\r\n  member\r\n    ON member.id = repository_has_member.member_id\r\n`;\r\n\r\nexport const language = `\r\nSELECT\r\n  languageSlice.id as sId,\r\n  languageSlice.color as sColor,\r\n  languageSlice.name as sName,\r\n  languageSlice.size as sSize,\r\n  languageSlice.pie_id as sPieId\r\nFROM\r\n  languageSlice\r\n`;\r\n\r\nexport const totalLanguageSize = `\r\nSELECT\r\n  sum(languageSlice.size) as num\r\nFROM\r\n  languageSlice\r\n`;\r\n\r\nexport const calendar = `\r\nSELECT\r\n  calendar.id as cId,\r\n  calendar.date as cDate,\r\n  YEAR(contrib.datetime) as cYear,\r\n  calendar.week as cWeek,\r\n  calendar.weekday as cWeekday,\r\n  calendar.color as cColor,\r\n  contrib.id as ctId,\r\n  contrib.datetime as ctDatetime,\r\n  contrib.nameWithOwner as ctNameWithOwner,\r\n  contrib.repoUrl as ctRepoUrl,\r\n  contrib.additions as ctAdditions,\r\n  contrib.deletions as ctDeletions,\r\n  contrib.changedFiles as ctChangedFiles,\r\n  contrib.type as ctType\r\nFROM\r\n  calendar\r\nJOIN\r\n  contrib\r\n    ON calendar.id = contrib.calendar_id\r\n`;\r\n\r\nexport const totalContributions = `\r\nSELECT\r\n  YEAR(contrib.datetime) as year,\r\n  count(contrib.id) as num\r\nFROM\r\n  contrib\r\nGROUP BY\r\n  YEAR(contrib.datetime)\r\n`;\r\n\r\nexport const baseYearOfPlatforms = `\r\nSELECT \r\n  MIN(YEAR(date)) as baseYear\r\nFROM\r\n  calendar\r\n`;\r\n\r\nexport const statistic = `\r\nSELECT\r\n  statistic.id as sId,\r\n  statistic.year as sYear,\r\n  streak.id as stId,\r\n  streak.startDate as stsDate,\r\n  streak.endDate as steDate,\r\n  streak.total as stTotal,\r\n  streak.statistic_id as stsId\r\nFROM\r\n  statistic\r\nLEFT JOIN\r\n  streak\r\n    ON statistic.id = streak.statistic_id\r\n`;\r\n\r\nexport const contribPerPlatform = `\r\nSELECT\r\n  contrib.id as cId,\r\n  contrib.datetime as cDatetime,\r\n  contrib.nameWithOwner as cNameWithOwner,\r\n  contrib.repoUrl as ctRepoUrl,\r\n  contrib.additions as cAdditions,\r\n  contrib.deletions as cDeletions,\r\n  contrib.changedFiles as cChangedFiles,\r\n  contrib.type as cType,\r\n  platform.id as pId,\r\n  platform.platformName as pName\r\nFROM\r\n  contrib\r\nJOIN\r\n  calendar\r\n    ON contrib.calendar_id = calendar.id\r\nJOIN\r\n  platform\r\n    ON calendar.platform_id = platform.id\r\n`;\r\n\r\nexport const busiestDay = `\r\nSELECT\r\n  date,\r\n  total,\r\n  YEAR(date) as year\r\nFROM\r\n  calendar\r\nWHERE\r\n  total in (\r\n    SELECT\r\n      max(c2.total) as total,\r\n      YEAR(date)\r\n    FROM calendar c2\r\n    GROUP BY YEAR(date)\r\n  )\r\n`;\r\n\r\n/**\r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","import * as select from \"../Statements/Select\";\r\n\r\n// Formats a date to YYYY-MM-DD format\r\nconst formatDate = (date) => {\r\n  return date.toISOString().split(\"T\")[0];\r\n};\r\n\r\nexport function getUser(data) {\r\n  let platforms = data.exec(select.platform);\r\n\r\n  // Use information of platform 0 as basic information\r\n  let platform = platforms[0];\r\n  let user = {};\r\n  user.avatarUrl = platform.avatarUrl;\r\n  user.company = platform.company;\r\n  user.createdAt = platform.createdAt;\r\n  user.name = platform.fullName;\r\n  user.username = platform.username;\r\n  user.email = platform.email;\r\n  user.websiteUrl = platform.websiteUrl;\r\n  user.status = platform.statusMessage;\r\n  user.statusEmojiHTML = platform.statusEmojiHTML;\r\n  user.isEmployee = false;\r\n  user.isHireable = false;\r\n  user.location = platform.location;\r\n  user.platforms = [];\r\n\r\n  platforms.forEach(p => {\r\n    user.platforms.push({\r\n      platform: p.platformName,\r\n      username: p.username,\r\n    });\r\n  });\r\n\r\n  return user;\r\n}\r\n\r\nexport function getOrganizations(data) {\r\n  let organizations = data.exec(select.organization);\r\n\r\n  let orgs = {};\r\n  organizations.forEach((orgWithMember) => {\r\n    if (!orgs[orgWithMember.oId]) {\r\n      let org = {};\r\n      org.name = orgWithMember.oName;\r\n      org.url = orgWithMember.oUrl;\r\n      org.avatarUrl = orgWithMember.oAvatarUrl;\r\n      org.memberCount = 0;\r\n      org.members = [];\r\n      orgs[orgWithMember.oId] = org;\r\n    }\r\n\r\n    if (orgWithMember.mId !== undefined) {\r\n      let member = {};\r\n      member.oid = orgWithMember.oId;\r\n      member.name = orgWithMember.mName;\r\n      member.login = orgWithMember.mUsername;\r\n      member.avatarUrl = orgWithMember.mAvatarUrl;\r\n      member.url = orgWithMember.mUrl;\r\n      member.projectsUrl = null;\r\n\r\n      orgs[orgWithMember.oId].memberCount++;\r\n      orgs[orgWithMember.oId].members.push(member);\r\n    }\r\n  });\r\n  return Object.values(orgs);\r\n}\r\n\r\nexport function getRepositories(data) {\r\n  let repositories = data.exec(select.repository);\r\n\r\n  let repos = {};\r\n  repositories.forEach((repoWithExtras) => {\r\n    if (!repos[repoWithExtras.rId]) {\r\n      let repo = {};\r\n      repo.name = repoWithExtras.rName;\r\n      repo.avatarUrl = repoWithExtras.oAvatarUrl;\r\n      repo.url = repoWithExtras.rUrl;\r\n\r\n      repo.owner = {};\r\n      repo.owner.name = repoWithExtras.oName;\r\n      repo.owner.login = repoWithExtras.oUsername;\r\n      repo.owner.url = repoWithExtras.oUrl;\r\n\r\n      repo.languagePie = {};\r\n      repo.languagePie.size = repoWithExtras.lSize;\r\n      repo.languagePie.total = repoWithExtras.lTotal;\r\n      repo.languagePie.slices = [];\r\n\r\n      repo.members = [];\r\n      repo.memberCount = 0;\r\n\r\n      repos[repoWithExtras.rId] = repo;\r\n    }\r\n\r\n    if (repoWithExtras.mId !== undefined) {\r\n      let member = {};\r\n      member.name = repoWithExtras.mName;\r\n      member.login = repoWithExtras.mUsername;\r\n      member.avatarUrl = repoWithExtras.mAvatarUrl;\r\n      member.url = repoWithExtras.mUrl;\r\n      member.projectsUrl = null;\r\n\r\n      repos[repoWithExtras.rId].memberCount++;\r\n      repos[repoWithExtras.rId].members.push(member);\r\n    }\r\n\r\n    if (repoWithExtras.sId !== undefined) {\r\n      let slice = {};\r\n      slice.name = repoWithExtras.sName;\r\n      slice.color = repoWithExtras.sColor;\r\n      slice.size = repoWithExtras.sSize;\r\n\r\n      repos[repoWithExtras.rId].languagePie.slices.push(slice);\r\n    }\r\n  });\r\n\r\n  return Object.values(repos);\r\n}\r\n\r\nexport function getLanguages(data) {\r\n  let languages = data.exec(select.language);\r\n  let totalSize = data.exec(select.totalLanguageSize)[0].num;\r\n  let pie = {};\r\n  pie.slices = {};\r\n  pie.total = totalSize;\r\n\r\n  languages.forEach((languageSlice) => {\r\n    if (!pie.slices[languageSlice.sName]) {\r\n      let slice = {};\r\n      slice.name = languageSlice.sName;\r\n      slice.color = languageSlice.sColor;\r\n      slice.size = languageSlice.sSize;\r\n      slice.share = Math.round((slice.size / totalSize) * 100 * 100) / 100;\r\n\r\n      pie.slices[languageSlice.sName] = slice;\r\n    } else {\r\n      pie.slices[languageSlice.sName].size += languageSlice.sSize;\r\n      pie.slices[languageSlice.sName].share =\r\n        Math.round(\r\n          (pie.slices[languageSlice.sName].size / totalSize) * 100 * 100\r\n        ) / 100;\r\n    }\r\n  });\r\n  return pie;\r\n}\r\n\r\nexport function getCalendar(data) {\r\n  let calendar = data.exec(select.calendar);\r\n  let baseYear = data.exec(select.baseYearOfPlatforms)[0].baseYear;\r\n\r\n  let calendarGrid = {};\r\n  let today = new Date();\r\n  if(!baseYear){\r\n    baseYear = today.getFullYear();\r\n  }\r\n\r\n  for (let indexY = baseYear; indexY <= new Date().getFullYear(); indexY++) {\r\n    let date = new Date(indexY, 0, 1);\r\n    let offset = 0;\r\n    date.setDate(date.getDate() - date.getDay() - offset);\r\n    calendarGrid[indexY] = generateCalendarGrid(date, true);\r\n  }\r\n\r\n  today.setDate(today.getDate() + 1);\r\n\r\n  calendar.forEach((day) => {\r\n    if (day.cYear) {\r\n      calendarGrid[day.cYear].total++;\r\n      calendarGrid[day.cYear].weeks[day.cWeek].contributionDays[day.cWeekday]\r\n        .total++;\r\n      calendarGrid[day.cYear].weeks[day.cWeek].contributionDays[\r\n        day.cWeekday\r\n      ].color = day.cColor;\r\n    }\r\n  });\r\n\r\n  let nowYear = dictCalendarToArray(calendarGrid)[today.getFullYear()];\r\n  let lastYear = dictCalendarToArray(calendarGrid)[today.getFullYear() - 1];\r\n\r\n  let nowDate = new Date();\r\n  let contributionDays = [];\r\n  nowYear.weeks.reverse().forEach((week) => {\r\n    week.contributionDays.reverse().forEach((day) => {\r\n      if (new Date(day.date) < nowDate) {\r\n        contributionDays.push(day);\r\n      }\r\n    });\r\n  });\r\n\r\n  if (lastYear !== undefined) {\r\n    lastYear.weeks.reverse().forEach((week) => {\r\n      week.contributionDays.reverse().forEach((day) => {\r\n        if (contributionDays.length <= 371 + nowDate.getDay()) {\r\n          contributionDays.push(day);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  let currentCalendar = getCalendarFromDates(contributionDays.reverse());\r\n\r\n  for (let [k, v] of Object.entries(dictCalendarToArray(calendarGrid))) {\r\n    calendarGrid[k] = calculateColorsForCalendarDay(v);\r\n  }\r\n\r\n  return {\r\n    years: calendarGrid,\r\n    currentYear: calculateColorsForCalendarDay(currentCalendar)\r\n  };\r\n}\r\n\r\nconst getCalendarFromDates = (fullDays) => {\r\n  let year = {};\r\n  let count = 0;\r\n  year.weeks = [];\r\n  year.total = 0;\r\n  year.fromDate = new Date(fullDays[0].date);\r\n  year.toDate = new Date(fullDays[fullDays.length - 1].date);\r\n\r\n  for (let indexW = 0; indexW <= 53; indexW++) {\r\n    let week = {};\r\n    week.contributionDays = [];\r\n    for (let indexD = 0; indexD <= 6; indexD++) {\r\n      if (fullDays[count] !== undefined) {\r\n        year.total += fullDays[count].total;\r\n        week.contributionDays.push(fullDays[count]);\r\n      }\r\n      count++;\r\n    }\r\n    year.weeks.push(week);\r\n  }\r\n  return year;\r\n};\r\n\r\nconst generateCalendarGrid = (date, flag) => {\r\n  let emptyContributionYear = {};\r\n  emptyContributionYear.weeks = {};\r\n  emptyContributionYear.total = 0;\r\n\r\n  for (let indexW = 0; indexW < 53; indexW++) {\r\n    let week = {};\r\n    week.contributionDays = {};\r\n\r\n    for (let indexD = 0; indexD <= 6; indexD++) {\r\n      let day = {};\r\n      if (flag) {\r\n        date.setDate(date.getDate() + 1);\r\n      } else {\r\n        date.setDate(date.getDate() - 1);\r\n      }\r\n      day.total = 0;\r\n      day.date = formatDate(new Date(date));\r\n      day.color = \"#ffffff\";\r\n      week.contributionDays[indexD] = day;\r\n    }\r\n\r\n    emptyContributionYear.weeks[indexW] = week;\r\n  }\r\n  return emptyContributionYear;\r\n};\r\n\r\n// Fill the raw calendar structure with the correct colors\r\nconst calculateColorsForCalendarDay = (calendarYear) => {\r\n  let busiestDay = 0;\r\n  // Calculate busiest day of the year\r\n  calendarYear.weeks.forEach((_week) => {\r\n    _week.contributionDays.forEach((_day) => {\r\n      if (_day.total > busiestDay) {\r\n        busiestDay = _day.total;\r\n      }\r\n    });\r\n  });\r\n\r\n  calendarYear.weeks.forEach((_week) => {\r\n    _week.contributionDays.forEach((_day) => {\r\n      let precision = _day.total / busiestDay;\r\n      if (precision > 0.8 && precision <= 1) {\r\n        _day.color = \"#196127\";\r\n      } else if (precision > 0.6 && precision <= 0.8) {\r\n        _day.color = \"#239a3b\";\r\n      } else if (precision > 0.4 && precision <= 0.6) {\r\n        _day.color = \"#7bc96f\";\r\n      } else if (precision > 0.0 && precision <= 0.4) {\r\n        _day.color = \"#c6e48b\";\r\n      } else if (precision === 0) {\r\n        _day.color = \"#ebedf0\";\r\n      }\r\n    });\r\n  });\r\n\r\n  return calendarYear;\r\n};\r\n\r\nfunction dictCalendarToArray(dict) {\r\n  let obj = JSON.parse(JSON.stringify(dict));\r\n  for (let year in dict) {\r\n    for (let week in dict[year].weeks) {\r\n      obj[year].weeks[week].contributionDays = [];\r\n      for (let day in dict[year].weeks[week].contributionDays) {\r\n        obj[year].weeks[week].contributionDays.push(\r\n          dict[year].weeks[week].contributionDays[day]\r\n        );\r\n      }\r\n    }\r\n    obj[year].weeks = Object.values(obj[year].weeks);\r\n  }\r\n  return obj;\r\n}\r\n\r\nexport function getStats(data) {\r\n  let stats = data.exec(select.statistic);\r\n  let totalContributionsPerYear = {};\r\n  let bDays = {};\r\n\r\n  data.exec(select.totalContributions).forEach((elem) => {\r\n    totalContributionsPerYear[elem.year] = elem.num;\r\n  });\r\n  \r\n  data.exec(select.busiestDay).forEach((elem) => {\r\n    let busiestDay = {};\r\n    busiestDay.date = elem.date;\r\n    busiestDay.total = elem.total;\r\n\r\n    bDays[elem.year] = busiestDay;\r\n  });\r\n\r\n  let statistics = {};\r\n\r\n  stats.forEach((stat) => {\r\n    if (!statistics[stat.sYear]) {\r\n      let busiestDay = {};\r\n      busiestDay.date = bDays[stat.sYear].date;\r\n      busiestDay.total = bDays[stat.sYear].total;\r\n      let statistic = {};\r\n      statistic.streaks = [];\r\n      statistic.busiestDay = busiestDay;\r\n      statistic.average =\r\n        Math.round((totalContributionsPerYear[stat.sYear] / 365) * 100) / 100;\r\n      statistic.longestStreak = {};\r\n      statistic.longestStreak.total = 0;\r\n      statistic.currentStreak = {};\r\n      statistic.currentStreak.total = 0;\r\n\r\n      statistics[stat.sYear] = statistic;\r\n    }\r\n\r\n    if(stat.stId !== undefined){\r\n      let streak = {};\r\n    streak.startDate = stat.stsDate;\r\n    streak.endDate = stat.steDate;\r\n    streak.total = stat.stTotal;\r\n    statistics[stat.sYear].streaks.push(streak);\r\n\r\n    // To calculate the no. of days between two dates\r\n    const dateDiff = (date1, date2) =>\r\n      Math.ceil((date2.getTime() - date1.getTime()) / (1000 * 3600 * 24));\r\n\r\n    let streakDiff = dateDiff(streak.startDate, streak.endDate);\r\n    if (statistics[stat.sYear].longestStreak.total <= streakDiff) {\r\n      statistics[stat.sYear].longestStreak.total = streakDiff;\r\n      statistics[stat.sYear].longestStreak.startDate = streak.startDate;\r\n      statistics[stat.sYear].longestStreak.endDate = streak.endDate;\r\n    }\r\n\r\n    let today = new Date();\r\n\r\n    if (\r\n      streak.endDate.getFullYear() === today.getFullYear() &&\r\n      streak.endDate.getMonth() === today.getMonth() &&\r\n      streak.endDate.getDate() === today.getDate()\r\n    ) {\r\n      statistics[stat.sYear].currentStreak.startDate = streak.startDate;\r\n      statistics[stat.sYear].currentStreak.endDate = streak.endDate;\r\n      statistics[stat.sYear].currentStreak.total = dateDiff(\r\n        streak.startDate,\r\n        streak.endDate\r\n      );\r\n    }\r\n    }\r\n\r\n    \r\n  });\r\n\r\n  return statistics;\r\n}\r\n\r\nexport function getContribTypes(data) {\r\n  let contribPerPlatforms = data.exec(select.contribPerPlatform);\r\n\r\n  let contribTypes = {};\r\n  contribTypes.platform = {};\r\n  contribTypes.user = {};\r\n  contribTypes.contribs = {};\r\n\r\n  contribPerPlatforms.forEach((contribPerPlatform) => {\r\n    if (!contribTypes.platform[contribPerPlatform.pName]) {\r\n      let platform = {};\r\n      platform.share = 0;\r\n      platform.count = 0;\r\n\r\n      contribTypes.platform[contribPerPlatform.pName] = platform;\r\n    }\r\n\r\n    contribTypes.platform[contribPerPlatform.pName].count++;\r\n    contribTypes.platform[contribPerPlatform.pName].share =\r\n      Math.round(\r\n        (contribTypes.platform[contribPerPlatform.pName].count /\r\n          contribPerPlatforms.length) *\r\n          100 *\r\n          100\r\n      ) / 100;\r\n\r\n    if (!contribTypes.user[contribPerPlatform.pId]) {\r\n      let platform = {};\r\n      platform.share = 0;\r\n      platform.count = 0;\r\n      platform.name = contribPerPlatform.pName;\r\n\r\n      contribTypes.user[contribPerPlatform.pId] = platform;\r\n    }\r\n\r\n    contribTypes.user[contribPerPlatform.pId].count++;\r\n    contribTypes.user[contribPerPlatform.pId].share =\r\n      Math.round(\r\n        (contribTypes.user[contribPerPlatform.pId].count /\r\n          contribPerPlatforms.length) *\r\n          100 *\r\n          100\r\n      ) / 100;\r\n\r\n    if (!contribTypes.contribs[contribPerPlatform.cType]) {\r\n      let type = {};\r\n      type.share = 0;\r\n      type.count = 0;\r\n      type.platform = {};\r\n      type.user = {};\r\n\r\n      contribTypes.contribs[contribPerPlatform.cType] = type;\r\n    }\r\n\r\n    contribTypes.contribs[contribPerPlatform.cType].count++;\r\n    contribTypes.contribs[contribPerPlatform.cType].share =\r\n      Math.round(\r\n        (contribTypes.contribs[contribPerPlatform.cType].count /\r\n          contribPerPlatforms.length) *\r\n          100 *\r\n          100\r\n      ) / 100;\r\n\r\n    if (\r\n      !contribTypes.contribs[contribPerPlatform.cType].platform[\r\n        contribPerPlatform.pName\r\n      ]\r\n    ) {\r\n      let platform = {};\r\n      platform.share = 0;\r\n      platform.count = 0;\r\n\r\n      contribTypes.contribs[contribPerPlatform.cType].platform[\r\n        contribPerPlatform.pName\r\n      ] = platform;\r\n    }\r\n\r\n    contribTypes.contribs[contribPerPlatform.cType].platform[\r\n      contribPerPlatform.pName\r\n    ].count++;\r\n    contribTypes.contribs[contribPerPlatform.cType].platform[\r\n      contribPerPlatform.pName\r\n    ].share =\r\n      Math.round(\r\n        (contribTypes.contribs[contribPerPlatform.cType].platform[\r\n          contribPerPlatform.pName\r\n        ].count /\r\n          contribPerPlatforms.filter((elem) => {\r\n            return elem.cType === contribPerPlatform.cType;\r\n          }).length) *\r\n          100 *\r\n          100\r\n      ) / 100;\r\n\r\n    if (\r\n      !contribTypes.contribs[contribPerPlatform.cType].user[\r\n        contribPerPlatform.pId\r\n      ]\r\n    ) {\r\n      let platform = {};\r\n      platform.share = 0;\r\n      platform.count = 0;\r\n      platform.name = contribPerPlatform.pName;\r\n\r\n      contribTypes.contribs[contribPerPlatform.cType].user[\r\n        contribPerPlatform.pId\r\n      ] = platform;\r\n    }\r\n\r\n    contribTypes.contribs[contribPerPlatform.cType].user[contribPerPlatform.pId]\r\n      .count++;\r\n    contribTypes.contribs[contribPerPlatform.cType].user[\r\n      contribPerPlatform.pId\r\n    ].share =\r\n      Math.round(\r\n        (contribTypes.contribs[contribPerPlatform.cType].user[\r\n          contribPerPlatform.pId\r\n        ].count /\r\n          contribPerPlatforms.filter((elem) => {\r\n            return elem.cType === contribPerPlatform.cType;\r\n          }).length) *\r\n          100 *\r\n          100\r\n      ) / 100;\r\n  });\r\n\r\n  return contribTypes;\r\n}\r\n\r\n/**\r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","import * as data from \"./IntelData\";\r\n//import * as data from \"./IntelDummy\";\r\n\r\nimport * as converter from \"./Database/Converter\";\r\n\r\nexport async function fill(userList) {\r\n\r\n  async function retry(maxRetries, fn, params) {\r\n      return await fn(...params).catch(() => {\r\n        if (maxRetries <= 0) {\r\n          throw new Error(`Could not fetch data after ${maxRetries} retries... Please try again later!`);\r\n        }\r\n        return retry(maxRetries - 1, fn, params);\r\n      });\r\n  }\r\n\r\n  for (let index = 0; index < userList.length; index++) {\r\n    const user = userList[index];\r\n    const maxRetries = 5;\r\n      await retry(maxRetries, data.fill, [user]).catch((err) => {\r\n        throw err;\r\n      });\r\n    \r\n  }\r\n}\r\n\r\nexport function templateSelect() {\r\n  return data.exec(\"SELECT * FROM statistic\");\r\n}\r\n\r\nexport function user() {\r\n  try{\r\n    return converter.getUser(data);\r\n  }\r\n  catch{\r\n    //console.warn(\"Converting user data failed..\")\r\n    return undefined;\r\n  }\r\n}\r\n\r\nexport function repos() {\r\n  try{\r\n    return converter.getRepositories(data);\r\n  }\r\n  catch{\r\n    //console.warn(\"Converting repository data failed..\")\r\n    return undefined;\r\n  }\r\n}\r\n\r\nexport function orgs() {\r\n  try{\r\n    return converter.getOrganizations(data);\r\n  }\r\n  catch{\r\n    //console.warn(\"Converting organization data failed..\")\r\n    return undefined;\r\n  }\r\n}\r\n\r\nexport function languages() {\r\n  try{\r\n    return converter.getLanguages(data);\r\n  }\r\n  catch{\r\n    //console.warn(\"Converting language data failed..\")\r\n    return undefined;\r\n  }\r\n}\r\n\r\nexport function calendar() {\r\n  try{\r\n    return converter.getCalendar(data);\r\n  }\r\n  catch{\r\n    //console.warn(\"Converting calendar data failed..\")\r\n    return undefined;\r\n  }\r\n}\r\n\r\nexport function stats() {\r\n  try{\r\n    return converter.getStats(data);\r\n  }\r\n  catch{\r\n    //console.warn(\"Converting statistic data failed..\")\r\n    return undefined;\r\n  }\r\n}\r\n\r\nexport function contribTypes() {\r\n  try{\r\n    return converter.getContribTypes(data);\r\n  }\r\n  catch{\r\n    //console.warn(\"Converting contrib type data failed..\")\r\n    return undefined;\r\n  }\r\n}\r\n\r\n/**\r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","// Import Modules\r\nimport { guid } from \"../services/utilities\";\r\nimport { IProvider } from \"react-very-simple-oauth\";\r\n\r\n// Set the default values needed for an OAuth-Request\r\nconst client_id = \"2148629809594d57c113\";\r\nconst client_secret = \"64a37e4846387cfcaea35d83afca3c9c8689628c\";\r\nconst state = guid();\r\n// Live version\r\nconst redirect_uri = encodeURIComponent(\"https://snek.at/redirect\");\r\n// Development version\r\n//const redirect_uri = encodeURIComponent(\"http://localhost:3000/redirect\");\r\nconst proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\r\n\r\nexport const githubProvider: IProvider<boolean> = {\r\n  //Get Request to the GitHub OAuth Authorize-Site\r\n  buildAuthorizeUrl(): string {\r\n    return `https://github.com/login/oauth/authorize?redirect_uri=${redirect_uri}\r\n        &client_id=${client_id}\r\n        &client_secret=${client_secret}\r\n        &scope=repo, user:email, read:user, read:org\r\n        &state=${state}`;\r\n  },\r\n\r\n  // Catch any error that appears during the OAuth process\r\n  extractError(redirectUrl: string): Error | undefined {\r\n    const errorMatch = redirectUrl.match(/error=([^&]+)/);\r\n    if (!errorMatch) {\r\n      return undefined;\r\n    }\r\n\r\n    const errorReason = errorMatch[1];\r\n    const errorDescriptionMatch = redirectUrl.match(\r\n      /error_description=([^&]+)/,\r\n    );\r\n    const errorDescription = errorDescriptionMatch\r\n      ? errorDescriptionMatch[1]\r\n      : \"\";\r\n    return new Error(\r\n      `Error during login. Reason: ${errorReason} Description: ${errorDescription}`,\r\n    );\r\n  },\r\n\r\n  // This function catches the the returned value\r\n  async extractSession(redirectUrl: string) {\r\n    let data = null;\r\n    let code = null;\r\n    const codeMatch = redirectUrl.match(/code=([^&]+)/);\r\n    if (codeMatch) {\r\n      code = codeMatch[1];\r\n    }\r\n\r\n    let state = null;\r\n    const stateMatch = redirectUrl.match(/state=([^&]+)/);\r\n    if (stateMatch) {\r\n      state = stateMatch[1];\r\n    }\r\n\r\n    const AuthorizeUrl = `${proxyUrl}https://github.com/login/oauth/access_token?code=${code}\r\n        &client_secret=${client_secret}&client_id=${client_id}&redirect_uri=${redirect_uri}&state=${state}`;\r\n\r\n    // POST request to get the access token from GitHub\r\n    await fetch(AuthorizeUrl, {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Access-Allow-Credentials\": \"True\",\r\n        \"Access-Control-Allow-Methods\": \"POST\",\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Content-Type\": \"application/json\",\r\n        Vary: \"Origin\",\r\n      },\r\n      method: \"POST\",\r\n    })\r\n    .then(async res => await res.json())\r\n    .then(async res => {\r\n      const access_token = res.access_token\r\n      // GET request to get the user used for OAuth \r\n      await fetch(`https://api.github.com/user?access_token=${access_token}`)\r\n      .then(async res => await res.json())\r\n      .then(res => {\r\n        data = {'username':res.login, 'access_token': access_token};\r\n        return data;\r\n      });\r\n    });\r\n    return data;\r\n  },\r\n};\r\n\r\n/**\r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","export function guid() {\r\n  var d = new Date().getTime();\r\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\r\n    var r = (d + Math.random() * 16) % 16 | 0;\r\n    d = Math.floor(d / 16);\r\n    return (c === \"x\" ? r : (r & 0x3) | 0x8).toString(16);\r\n  });\r\n}\r\n\r\n/**\r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","// Import Modules\r\nimport { IProvider } from \"react-very-simple-oauth\";\r\n\r\nexport const gitlabProvider: IProvider<boolean> = {\r\n  //Get Request to the GitHub OAuth Authorize-Site\r\n  buildAuthorizeUrl(): string {\r\n    return `https://snek.at/gitlab`;\r\n  },\r\n\r\n  // Catch any error that appears during the login process\r\n  extractError(redirectUrl: string): Error | undefined {\r\n    const errorMatch = redirectUrl.match(/error=([^&]+)/);\r\n    if (!errorMatch) {\r\n      return undefined;\r\n    }\r\n\r\n    const errorReason = errorMatch[1];\r\n    const errorDescriptionMatch = redirectUrl.match(\r\n      /error_description=([^&]+)/,\r\n    );\r\n    const errorDescription = errorDescriptionMatch\r\n      ? errorDescriptionMatch[1]\r\n      : \"\";\r\n    return new Error(\r\n      `Error during login. Reason: ${errorReason} Description: ${errorDescription}`,\r\n    );\r\n  },\r\n\r\n  // This function catches the the returned value\r\n  async extractSession(redirectUrl: string) {\r\n    let server = null;\r\n    let username = null;\r\n    const usernameMatch = redirectUrl.match(/username=([^&]+)/);\r\n    if (usernameMatch) {\r\n      username = usernameMatch[1].replace(/__/g,\".\");\r\n    }\r\n\r\n    const serverMatch = redirectUrl.match(/server=([^&]+)/);\r\n    if (serverMatch) {\r\n      server = serverMatch[1].replace(/__/g,\".\");\r\n    }\r\n\r\n    const data = {'server': server, 'username': username}\r\n    return data;\r\n  },\r\n};\r\n\r\n/**\r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","//> React\r\n// Contains all the functionality necessary to define React components\r\nimport React from \"react\";\r\n\r\n//> Additional modules\r\n// Used to hash the password with SHA256\r\nimport { sha256 } from \"js-sha256\";\r\n\r\n//> MDB\r\n// \"Material Design for Bootstrap\" is a great UI design framework\r\nimport {\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBCardFooter,\r\n  MDBListGroup,\r\n  MDBListGroupItem,\r\n  MDBCardText,\r\n  MDBInput,\r\n  MDBBtn,\r\n  MDBBadge,\r\n  MDBTooltip,\r\n  MDBPopover,\r\n  MDBPopoverHeader,\r\n  MDBPopoverBody,\r\n  MDBIcon,\r\n  toast,\r\n  ToastContainer,\r\n  MDBContainer,\r\n} from \"mdbreact\";\r\n\r\n//> CSS\r\nimport \"./register.scss\";\r\n\r\n//> Intel\r\nimport * as intel from \"../../../../intel\";\r\n\r\n//> Auth\r\nimport { githubProvider } from \"../../../../intel/OAuthGithub/providers/github\";\r\nimport { gitlabProvider } from \"../../../../intel/AuthGitLab/providers/gitlab\";\r\nimport RSA from \"react-very-simple-oauth\";\r\n\r\n//> Apollo\r\nimport { graphql } from \"react-apollo\";\r\nimport * as compose from \"lodash.flowright\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { async } from \"q\";\r\n\r\n//> Queries / Mutations\r\n// Register mutation\r\nconst CREATE_USER_MUTATION = gql`\r\n  mutation register($token: String!, $values: GenericScalar!) {\r\n    registrationFormPage(token: $token, url: \"/registration\", values: $values) {\r\n      result\r\n      errors {\r\n        name\r\n        errors\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nclass Register extends React.Component{\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    password1: \"\",\r\n    username: \"\",\r\n    server: \"\",\r\n    oAuthGitHubButton: true,\r\n    oAuthGitHubData: null,\r\n    AuthGitLabButton: true,\r\n    sourceList: [],\r\n    customUsername: false,\r\n    usernames: [],\r\n  }\r\n\r\n  addToUsernames = (username) => {\r\n    let usernames = this.state.usernames;\r\n    if(!usernames.includes(username)){\r\n      usernames.push(username);\r\n      this.setState({\r\n        usernames\r\n      });\r\n    }\r\n  }\r\n\r\n  changeHandler = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  }\r\n\r\n  connectGitHub = async () => {\r\n    this.setState({\r\n      oAuthGitHubButton: false\r\n    });\r\n\r\n    const data = await RSA.acquireTokenAsync(githubProvider);\r\n    this.setState({\r\n      oAuthGitHubButton: true,\r\n    }, () => this.pushToSourceList(\"github\", data.username, \"github.com\", data.access_token));\r\n  }\r\n\r\n  connectGitLab = async () => {\r\n    this.setState({\r\n      AuthGitLabButton: false\r\n    });\r\n\r\n    const data = await RSA.acquireTokenAsync(gitlabProvider);\r\n    this.setState({\r\n      AuthGitLabButton: true,\r\n    }, () => this.pushToSourceList(\"gitlab\", data.username, data.server, data.token));\r\n  }\r\n\r\n  pushToSourceList = (source, username, server, token) => {\r\n    let sourceList = this.state.sourceList;\r\n\r\n    this.addToUsernames(username);\r\n\r\n    sourceList.push({\r\n      id: Math.random() * username.length + source.length,\r\n      source,\r\n      username,\r\n      server,\r\n      token,\r\n    });\r\n    \r\n    // Set the new list of user information\r\n    this.setState({\r\n      sourceList,\r\n      username: this.state.username ? this.state.username : sourceList[0].username\r\n    });\r\n  }\r\n\r\n  removeSource = (id) => {\r\n    let sourceList = this.state.sourceList.filter(function( obj ) {\r\n        return obj.id !== id;\r\n    });\r\n    this.setState({\r\n      sourceList\r\n    });\r\n  }\r\n\r\n  handleUserNamePick = (username) => {\r\n    this.setState({\r\n      username\r\n    });\r\n  }\r\n  // Handle sumbit with JWT, send to engine.snek.at/api/graphiql\r\n  handleSubmit = async () => {\r\n    // JWT token\r\n    let token = this.props.token;\r\n\r\n    // Cache data\r\n    let cache = {}\r\n    intel\r\n    .fill(this.state.sourceList)\r\n    .then(() => {\r\n      intel.calendar();\r\n      intel.stats();\r\n      intel.repos();\r\n    })\r\n    .then(() => {\r\n      cache = {\r\n        logged: true,\r\n        contrib: intel.stats(),\r\n        contribCalendar: intel.calendar(),\r\n        contribTypes: intel.contribTypes(),\r\n        user: intel.user(),\r\n        orgs: intel.orgs(),\r\n        languages: intel.languages(),\r\n        repos: intel.repos(),\r\n      };\r\n    })\r\n    .then(() => {\r\n      let values = {\r\n        sources: JSON.stringify(this.state.sourceList),\r\n        username: this.state.username,\r\n        email: this.state.email,\r\n        password: sha256(this.state.password),\r\n        \"platform_data\": JSON.stringify(cache)\r\n      };\r\n      console.log(values);\r\n      this.props.register({\r\n        variables: { \r\n        token,\r\n        values\r\n      }\r\n      })\r\n      .then((result) => {\r\n          if (result.message === \"FAIL\")\r\n          {\r\n            this.notify(\"warn\",\"All fields have to be filled!\");\r\n          }\r\n          else \r\n          {\r\n            this.notify(\"success\",\" Welcome to SNEK!\");\r\n          }\r\n      })\r\n      .catch((error) => {\r\n          if (error.message.includes(\"Authentication Required\"))\r\n          {\r\n            this.notify(\"success\",\" Welcome to SNEK!\");\r\n          }\r\n          else if (error.message.includes(\"Duplicate entry\"))\r\n          {\r\n            this.notify(\"warn\",\" Username already taken!\");\r\n          }\r\n          else\r\n          {\r\n            console.log(error.message)\r\n            this.notify(\"error\", \"Something went wrong!\");\r\n          }\r\n      });\r\n    });\r\n  }\r\n\r\n  notify = (type, message) => {\r\n      if (type === \"success\") {\r\n        toast.success(\r\n          <div>\r\n            <MDBIcon\r\n            icon=\"lock-open\"\r\n            className=\"text ml-2 cursor-pointer\"\r\n            />\r\n            {message}\r\n          </div>\r\n        );\r\n      }\r\n      if (type === \"error\"){\r\n        toast.error(\r\n          <div>\r\n            <MDBIcon\r\n            icon=\"lock\"\r\n            className=\"text ml-2 cursor-pointer\"\r\n            />\r\n            {message}\r\n          </div>\r\n        );\r\n      }\r\n      if (type === \"warn\"){\r\n        toast.warn(\r\n          <div>\r\n            <MDBIcon\r\n            icon=\"exclamation-triangle\"\r\n            className=\"text ml-2 cursor-pointer\"\r\n            />\r\n            {message}\r\n          </div>\r\n        );\r\n      }\r\n  };\r\n\r\n  render(){\r\n    return(\r\n      <MDBCard id=\"register\" className=\"text-dark\">\r\n        <ToastContainer\r\n        hideProgressBar={true}\r\n        newestOnTop={true}\r\n        autoClose={5000}\r\n        />\r\n        <MDBCardBody>\r\n          <h2>Join us</h2>\r\n          <MDBInput\r\n          label=\"Email\"\r\n          type=\"email\"\r\n          name=\"email\"\r\n          outline\r\n          value={this.state.email}\r\n          onChange={this.changeHandler}\r\n          size=\"lg\"\r\n          />\r\n          <div>\r\n            <div>\r\n              <p className=\"lead\">Connect your work</p>\r\n              <small>\r\n              You can connect multiple accounts - even from the same platform.\r\n              </small>\r\n            </div>\r\n            <MDBTooltip\r\n              placement=\"bottom\"\r\n            >\r\n              <MDBBtn \r\n              floating \r\n              color=\"orange\" \r\n              className=\"mx-1\" \r\n              onClick={this.connectGitLab}\r\n              disabled={!this.state.AuthGitLabButton}\r\n              >\r\n                <MDBIcon fab icon=\"gitlab\" />\r\n              </MDBBtn>\r\n              <div>\r\n                  Link GitLab account\r\n              </div>\r\n            </MDBTooltip>\r\n            <MDBTooltip\r\n              placement=\"bottom\"\r\n            >\r\n              <MDBBtn \r\n              floating\r\n              social=\"git\"\r\n              className=\"mx-1\"\r\n              onClick={this.connectGitHub}\r\n              disabled={!this.state.oAuthGitHubButton}\r\n              >\r\n                <MDBIcon fab icon=\"github\" />\r\n              </MDBBtn>\r\n                <div>\r\n                  Link GitHub account\r\n              </div>\r\n            </MDBTooltip>\r\n            <MDBTooltip\r\n              placement=\"bottom\"\r\n            >\r\n              <MDBBtn floating social=\"blue\" className=\"mx-1\" disabled>\r\n                <MDBIcon fab icon=\"bitbucket\" />\r\n              </MDBBtn>\r\n              <div>\r\n                Link Bitbucket account\r\n              </div>\r\n            </MDBTooltip>\r\n          </div>\r\n          <div>\r\n            <MDBListGroup>\r\n            {this.state.sourceList.map((source, i) => {\r\n              return(\r\n                <MDBListGroupItem \r\n                className={\"list-item-\"+source.source}\r\n                key={i}\r\n                >\r\n                  <div>\r\n                  <MDBIcon \r\n                  fab\r\n                  icon={source.source}\r\n                  className=\"company-icon\"\r\n                  />\r\n                  {source.username}\r\n                  <MDBPopover\r\n                    placement=\"right\"\r\n                    domElement\r\n                    clickable\r\n                    popover\r\n                    tag=\"span\"\r\n                    id=\"popper1\"\r\n                  >   \r\n                    <span>\r\n                    <MDBIcon\r\n                    icon=\"check\"\r\n                    className=\"text-success ml-2 cursor-pointer\"\r\n                    />\r\n                    </span>\r\n                    <div>\r\n                      <MDBPopoverHeader>Verified</MDBPopoverHeader>\r\n                      <MDBPopoverBody>\r\n                        <MDBRow className=\"justify-content-center align-items-center m-0\">\r\n                          <MDBCol size=\"auto\" className=\"p-0 text-success\">\r\n                            <MDBIcon icon=\"award\" size=\"3x\" />\r\n                          </MDBCol>\r\n                          <MDBCol className=\"p-0 pl-3\">\r\n                            This source has been <strong className=\"text-success\">verified</strong> by logging into it.\r\n                          </MDBCol>\r\n                        </MDBRow>\r\n                      </MDBPopoverBody>\r\n                    </div>\r\n                  </MDBPopover>\r\n                  </div>\r\n                  <MDBIcon \r\n                  icon=\"times\"\r\n                  className=\"close-icon\"\r\n                  onClick={() => this.removeSource(source.id)}\r\n                  />\r\n                </MDBListGroupItem>\r\n              );\r\n            })}\r\n            </MDBListGroup>\r\n          </div>\r\n          {this.state.sourceList.length > 0 &&\r\n          <div className=\"pt-4\">\r\n            <p className=\"lead\">Choose your username</p>\r\n            {this.state.usernames.map((username, i) => {\r\n              return(\r\n                <MDBInput \r\n                key={i}\r\n                onClick={(e) => this.handleUserNamePick(username)}\r\n                checked={this.state.username === username ? true : false}\r\n                label={username}\r\n                type=\"radio\"\r\n                id={\"radio\"+i}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n          }\r\n          <MDBInput \r\n          label=\"Password\"\r\n          type=\"password\"\r\n          name=\"password\"\r\n          outline\r\n          value={this.state.password}\r\n          onChange={this.changeHandler}\r\n          size=\"lg\"\r\n          />\r\n          <MDBInput \r\n          label=\"Repeat password\"\r\n          type=\"password\"\r\n          name=\"password2\"\r\n          outline\r\n          value={this.state.password2}\r\n          onChange={this.changeHandler}\r\n          size=\"lg\"\r\n          />\r\n          <MDBBtn\r\n          color=\"success\"\r\n          className=\"w-100 py-3 font-weight-bold mx-0\"\r\n          onClick={this.handleSubmit}\r\n          >\r\n          Sign up for SNEK\r\n          </MDBBtn>\r\n        </MDBCardBody>\r\n        <MDBCardFooter>\r\n        </MDBCardFooter>\r\n      </MDBCard>\r\n    );\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  graphql(CREATE_USER_MUTATION, {\r\n      name: \"register\"\r\n  })\r\n)(Register);\r\n\r\n/**\r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","//> React\r\n// Contains all the functionality necessary to define React components\r\nimport React from \"react\";\r\n\r\n// Apollo\r\nimport { graphql, withApollo } from \"react-apollo\";\r\nimport * as compose from \"lodash.flowright\";\r\nimport { gql } from \"apollo-boost\";\r\n\r\n//> Additional modules\r\n// Password hashing\r\nimport { sha256 } from \"js-sha256\";\r\n\r\n//> MDB\r\n// \"Material Design for Bootstrap\" is a great UI design framework\r\nimport {\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBCardFooter,\r\n  MDBListGroup,\r\n  MDBListGroupItem,\r\n  MDBCardText,\r\n  MDBInput,\r\n  MDBBtn,\r\n  MDBBadge,\r\n  MDBTooltip,\r\n  MDBPopover,\r\n  MDBPopoverHeader,\r\n  MDBPopoverBody,\r\n  MDBIcon,\r\n  toast,\r\n  ToastContainer,\r\n  MDBToast,\r\n} from \"mdbreact\";\r\n\r\nconst LOGIN_USER = gql`\r\n    mutation tokenAuth($username: String!, $password: String!){\r\n        tokenAuth(username:$username,password:$password){\r\n            token\r\n        }\r\n    }\r\n`;\r\n\r\nclass Login extends React.Component{\r\n\r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n  }\r\n\r\n  changeHandler = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  }\r\n\r\n  handleSubmit = () => {\r\n    this.props.login({\r\n      variables: { \"username\": this.state.username, \"password\": sha256(this.state.password) }\r\n    })\r\n    .then(({data}) => {\r\n      if(data.tokenAuth){\r\n        if(data.tokenAuth.token){\r\n          this.props.loginHandler(data.tokenAuth.token);\r\n          this.notify(\"success\", \" Successfull login!\");\r\n        }\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      this.notify(\"error\", error.message.split(\":\")[1]);\r\n    });\r\n  }\r\n\r\n  notify = (type, message) => {\r\n    if (type === \"success\") {\r\n      toast.success(\r\n        <div>\r\n          <MDBIcon\r\n          icon=\"lock-open\"\r\n          className=\"text ml-2 cursor-pointer\"\r\n          />\r\n          {message}\r\n        </div>\r\n      );\r\n    }\r\n    if (type === \"error\"){\r\n      toast.error(\r\n        <div>\r\n          <MDBIcon\r\n          icon=\"lock\"\r\n          className=\"text ml-2 cursor-pointer\"\r\n          />\r\n          {message}\r\n        </div>\r\n      );\r\n    }\r\n    if (type === \"warn\"){\r\n      toast.warn(\r\n        <div>\r\n          <MDBIcon\r\n          icon=\"exclamation-triangle\"\r\n          className=\"text ml-2 cursor-pointer\"\r\n          />\r\n          {message}\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  render(){\r\n    return(\r\n      <MDBCard id=\"login\" className=\"text-dark\">\r\n        <ToastContainer\r\n        hideProgressBar={true}\r\n        newestOnTop={true}\r\n        autoClose={5000}\r\n        />\r\n        <MDBCardBody>\r\n          <h2>Sign in</h2>\r\n          <MDBInput\r\n          label=\"Username\"\r\n          type=\"text\"\r\n          name=\"username\"\r\n          outline\r\n          value={this.state.username}\r\n          onChange={this.changeHandler}\r\n          size=\"lg\"\r\n          />\r\n          <MDBInput \r\n          label=\"Password\"\r\n          type=\"password\"\r\n          name=\"password\"\r\n          outline\r\n          value={this.state.password}\r\n          onChange={this.changeHandler}\r\n          size=\"lg\"\r\n          />\r\n          <MDBBtn\r\n          color=\"success\"\r\n          className=\"w-100 py-3 font-weight-bold mx-0\"\r\n          onClick={this.handleSubmit}\r\n          >\r\n          Sign in\r\n          </MDBBtn>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    );\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  graphql(LOGIN_USER, { name: \"login\" }),\r\n)(withApollo(Login));\r\n\r\n/**\r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","//> React\r\n// Contains all the functionality necessary to define React components\r\nimport React from \"react\";\r\n// Router\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n//> MDB\r\n// \"Material Design for Bootstrap\" is a great UI design framework\r\nimport { MDBContainer, MDBRow, MDBCol } from \"mdbreact\";\r\n\r\n//> Components\r\nimport {\r\n  TextTypist,\r\n} from \"../../molecules\";\r\n\r\n//> Components\r\nimport { \r\n  Register,\r\n  Login,\r\n} from \"../../organisms/sections\";\r\n\r\n//> CSS\r\nimport \"./landing.scss\";\r\n\r\n//> Typist Data\r\nconst scope = [\r\n  \"engineers\",\r\n  \"programmers\",\r\n  \"developers\",\r\n  \"entrepreneurs\",\r\n  \"students\",\r\n  \"teachers\",\r\n  \"sneks\"\r\n];\r\n\r\nclass Landing extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  logMeIn = (token) => {\r\n    localStorage.setItem(\"jwt_snek\", token);\r\n    this.props.login(token);\r\n  }\r\n\r\n  render() {\r\n    const { globalStore } = this.props;\r\n\r\n    if(globalStore.data.logged) { return (<Redirect to=\"/me\"/>); }\r\n\r\n    if(globalStore.data.loaded){\r\n      return (\r\n        <div id=\"landing\" className=\"py-5\">\r\n          <MDBContainer>\r\n            <MDBRow className=\"\">\r\n              <MDBCol md=\"6\" className=\"pt-5\">\r\n                <h1 className=\"mt-5\">\r\n                Built for <TextTypist scope={scope} />\r\n                </h1>\r\n              </MDBCol>\r\n              <MDBCol md=\"6\">\r\n                {globalStore.data.pageLogin ? (\r\n                  <Login \r\n                  token={globalStore.data.token}\r\n                  loginHandler={this.logMeIn}\r\n                  />\r\n                ) : (\r\n                  <Register \r\n                  token={globalStore.data.token}\r\n                  />\r\n                )}\r\n              </MDBCol>\r\n            </MDBRow>\r\n          </MDBContainer>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <p>Loading...</p>;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Landing;\r\n\r\n/**\r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","//> React\r\n// Contains all the functionality necessary to define React components\r\nimport React from \"react\";\r\n\r\n//> MDB\r\n// \"Material Design for Bootstrap\" is a great UI design framework\r\nimport {\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBCard,\r\n  MDBCardBody,\r\n  MDBCardFooter,\r\n  MDBListGroup,\r\n  MDBListGroupItem,\r\n  MDBCardText,\r\n  MDBInput,\r\n  MDBBtn,\r\n  MDBBadge,\r\n  MDBTooltip,\r\n  MDBPopover,\r\n  MDBPopoverHeader,\r\n  MDBPopoverBody,\r\n  MDBIcon,\r\n  toast,\r\n  ToastContainer,\r\n} from \"mdbreact\";\r\n\r\nclass GitLab extends React.Component {\r\n  state = {\r\n    username: \"\",\r\n    server: \"\",\r\n  }\r\n\r\n  changeHandler = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  }\r\n\r\n  handleSubmit = () => {\r\n    if (this.state.username !== \"\")\r\n    {\r\n      if (this.state.server !== \"\")\r\n      {\r\n        this.state.username = this.state.username.replace(/\\./g,\"__\");\r\n        this.state.server = this.state.server.replace(/\\./g,\"__\");\r\n        window.open(`https://snek.at/redirect?server=${this.state.server}&username=${this.state.username}`, \"_self\");\r\n      }\r\n      else{\r\n        this.notify(\"warn\",\"Enter a server!\");\r\n      }\r\n    }\r\n    else{\r\n      this.notify(\"warn\",\"Enter a username!\");\r\n    }\r\n  }\r\n\r\n  notify = (type, message) => {\r\n    if (type === \"success\") {\r\n      toast.success(\r\n        <div>\r\n          <MDBIcon\r\n          icon=\"lock-open\"\r\n          className=\"text ml-2 cursor-pointer\"\r\n          />\r\n          {message}\r\n        </div>\r\n      );\r\n    }\r\n    if (type === \"error\"){\r\n      toast.error(\r\n        <div>\r\n          <MDBIcon\r\n          icon=\"lock\"\r\n          className=\"text ml-2 cursor-pointer\"\r\n          />\r\n          {message}\r\n        </div>\r\n      );\r\n    }\r\n    if (type === \"warn\"){\r\n      toast.warn(\r\n        <div>\r\n          <MDBIcon\r\n          icon=\"exclamation-triangle\"\r\n          className=\"text ml-2 cursor-pointer\"\r\n          />\r\n          {message}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <MDBCard id=\"gitlab\" className=\"text-dark\">\r\n      <ToastContainer\r\n        hideProgressBar={true}\r\n        newestOnTop={true}\r\n        autoClose={5000}\r\n      />\r\n      <MDBCardBody>\r\n        <h2>GitLab</h2>\r\n        <MDBInput\r\n        label=\"Username\"\r\n        type=\"text\"\r\n        name=\"username\"\r\n        outline\r\n        size=\"lg\"\r\n        value={this.state.username}\r\n        onChange={this.changeHandler}\r\n        />\r\n        <MDBInput \r\n        label=\"Server\"\r\n        type=\"text\"\r\n        name=\"server\"\r\n        outline\r\n        size=\"lg\"\r\n        value={this.state.server}\r\n        onChange={this.changeHandler}\r\n        />\r\n        <MDBBtn\r\n        color=\"success\"\r\n        className=\"w-100 py-3 font-weight-bold mx-0\"\r\n        onClick={this.handleSubmit}\r\n        >\r\n        Sign in\r\n        </MDBBtn>\r\n      </MDBCardBody>\r\n    </MDBCard>\r\n    );\r\n  }\r\n}\r\nexport default GitLab;\r\n\r\n/**\r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","//> React\r\n// Contains all the functionality necessary to define React components\r\nimport React from \"react\";\r\n// DOM bindings for React Router\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\n//> Components\r\nimport { \r\n  SettingsPage,\r\n  ProfilePage,\r\n  LandingPage,\r\n  RedirectPage,\r\n  GitLabPage,\r\n} from \"./components/pages\";\r\n\r\nclass Routes extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Route\r\n          exact\r\n          path=\"/\"\r\n          component={(props) => (\r\n            <LandingPage \r\n            globalStore={this.props}\r\n            login={this.props.login}\r\n            {...props}\r\n            />\r\n          )}\r\n        />\r\n        <Route exact path=\"/settings\" component={SettingsPage} />\r\n        <Route\r\n          exact\r\n          path=\"/me\"\r\n          component={(props) => (\r\n            <ProfilePage \r\n            globalStore={this.props} {...props}\r\n            />\r\n          )}\r\n        />\r\n        <Route exact path=\"/redirect\" component={RedirectPage} />\r\n        <Route exact path=\"/gitlab\" component={GitLabPage} />\r\n        <Route \r\n        exact\r\n        path=\"/about\"\r\n        component={() => window.location = \"https://www.aichner-christian.com/about\"}\r\n        />\r\n        <Route\r\n          render={function() {\r\n            return <h1>Not Found</h1>;\r\n          }}\r\n        />\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Routes;\r\n\r\n/**\r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","//> React\r\n// Contains all the functionality necessary to define React components\r\nimport React from \"react\";\r\n// DOM bindings for React Router\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\n//> Components\r\n/**\r\n * Footer: Global Footer\r\n * Navbar: Global navigation bar\r\n */\r\nimport { \r\n  Navbar,\r\n  Footer,\r\n} from \"./components/molecules\";\r\n\r\n//> Routes\r\nimport Routes from \"./Routes\";\r\n\r\n//> Intel\r\nimport * as intel from \"./intel\";\r\n\r\n//> Apollo\r\nimport { graphql, withApollo } from \"react-apollo\";\r\nimport * as compose from \"lodash.flowright\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { async } from \"q\";\r\n\r\n//> Queries / Mutations\r\n// Verify the token\r\nconst VERIFY_TOKEN = gql`\r\n  mutation verify($token: String!) {\r\n      verifyToken(token: $token) {\r\n      payload\r\n      }\r\n  }\r\n`;\r\n// Login real user\r\nconst LOGIN_REAL_USER = gql`\r\n  query login($token: String!){\r\n  user: me(token: $token){\r\n      username\r\n      registrationData\r\n    }\r\n  }\r\n`;\r\n// Refresh the token\r\nconst REFRESH_TOKEN = gql`\r\n  mutation refresh($token: String!) {\r\n    refreshToken(token: $token) {\r\n      payload\r\n      token\r\n    }\r\n  }\r\n`;\r\n// Login anonymous user\r\nconst LOGIN_USER = gql`\r\n    mutation tokenAuth{\r\n        tokenAuth(username:\"cisco\",password:\"ciscocisco\"){\r\n            token\r\n        }\r\n    }\r\n`;\r\n\r\nclass App extends React.Component {\r\n  // Initialize state\r\n  state = {\r\n    contrib: null,\r\n    contribCalendar: null,\r\n    contribTypes: null,\r\n    user: null,\r\n    languages: null,\r\n    repos: null,\r\n    token: \"\",\r\n    loaded: false,\r\n    logged: false,\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    // Clear state on reload\r\n    this.setState({\r\n      contrib: null,\r\n      contribCalendar: null,\r\n      contribTypes: null,\r\n      user: null,\r\n      languages: null,\r\n      repos: null,\r\n      pageLogin: false,\r\n    });\r\n\r\n    if(localStorage.getItem(\"jwt_snek\") !== null){\r\n      try {\r\n        // Verify JWT Token on first load\r\n        this._verifyToken();\r\n        // Refresh JWT token every 4 minutes\r\n        setInterval(async () => {\r\n          this._verifyToken();\r\n        }, 240000);\r\n      } catch(e) {\r\n        //console.log(2, e);\r\n      }\r\n    } else {\r\n      this._loginUser();\r\n    }\r\n  };\r\n\r\n  _verifyToken = () => {\r\n    this.props.verify({\r\n      variables: { \"token\": localStorage.getItem(\"jwt_snek\") }\r\n    })\r\n    .then(({data}) => {\r\n        if(data !== undefined){\r\n          if(data.verifyToken !== null){\r\n            this._isLogged(\r\n              data.verifyToken.payload.exp,\r\n              data.verifyToken.payload.origIat,\r\n              localStorage.getItem(\"jwt_snek\")\r\n            );\r\n          } else {\r\n            //> Troubleshooting Point 2\r\n            // Missing token payload @ Token verification with snek server (App.js)\r\n            //console.warn(TSID2, \"No token in payload.\");\r\n          }\r\n        } else {\r\n          //> Troubleshooting Point 2\r\n          // Missing token payload @ Token verification with snek server (App.js)\r\n          //console.warn(TSID2, \"No token in payload.\");\r\n        }\r\n    })\r\n    .catch((error) => {\r\n      //> Troubleshooting Point 3\r\n      // GraphQL mutation error @ Verify snek JWT (App.js)\r\n      //console.warn(TSID3, \"Mutation error:\",error);\r\n    });\r\n  }\r\n\r\n  // Reuqest JWT from engine.snek.at/api/graphiql\r\n  _loginUser = () => {\r\n    this.props.login()\r\n    .then(({data}) => {\r\n      if(data !== undefined){\r\n        // Set JWT, received from engine.snek.at/api/graphiql\r\n        this._setLogged(data.tokenAuth.token);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      //> Troubleshooting Point 4\r\n      // GraphQL mutation error @ Login snek JWT (App.js)\r\n      //console.error(TSID4, \"Mutation error:\",error);\r\n    });\r\n  }\r\n\r\n  // Set JWT, received from engine.snek.at/api/graphiql\r\n  _setLogged = (token) => {\r\n    this.setState({\r\n      token,\r\n      loaded: true,\r\n    }, () => localStorage.setItem(\"jwt_snek\", token));\r\n  }\r\n\r\n  // Login with JWT, received from engine.snek.at/api/graphiql\r\n  _isLogged = (exp, orig, token) => {\r\n    /**\r\n     * Generate current timestamp\r\n     * Ref: https://flaviocopes.com/how-to-get-timestamp-javascript/\r\n     */\r\n    let currentTS = ~~(Date.now() / 1000);\r\n    // Check if the JWT token is still valid\r\n    if(currentTS > exp){\r\n      // JWT has expired\r\n      this._refeshToken(token);\r\n    } else {\r\n      // Only if anything has changed, update the data\r\n      this._setLogged(token);\r\n    }\r\n  }\r\n\r\n  // Refresh JWT, received from engine.snek.at/api/graphiql\r\n  _refeshToken = (token) => {\r\n    this.props.refresh({\r\n      variables: { token }\r\n    })\r\n    .then(({data}) => {\r\n      if(data !== undefined){\r\n        localStorage.setItem(\"jwt_snek\", data.refreshToken.token);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      //> Troubleshooting Point 5\r\n      // GraphQL mutation error @ Refreshing snek JWT every 2min (App.js)\r\n      //console.warn(TSID5, \"Mutation error:\",error);\r\n    });\r\n  }\r\n\r\n  handleChangeState = (key, value) => {\r\n    this.setState({\r\n      [key]: value\r\n    });\r\n  }\r\n\r\n  // Handle login with JWT token\r\n  handleLogin = async (token) => {\r\n    this.props.client.query({\r\n      query: LOGIN_REAL_USER,\r\n      variables: { \"token\": localStorage.getItem(\"jwt_snek\") }\r\n    }).then(({data}) => {\r\n      if(data){\r\n        let registrationData = JSON.parse(data.user.registrationData);\r\n        let plattform_data_Temp = registrationData.platform_data.replace(/'/g,'\"');\r\n        let platform_data = JSON.parse(plattform_data_Temp);\r\n        let sources_Temp = registrationData.sources.replace(/'/g,'\"');\r\n        let sources = JSON.parse(sources_Temp);\r\n        this.setState({\r\n          logged: true,\r\n          contrib: platform_data.contrib,\r\n          contribCalendar: platform_data.contribCalendar,\r\n          contribTypes: platform_data.contribTypes,\r\n          user: platform_data.user,\r\n          orgs: platform_data.orgs,\r\n          languages: platform_data.languages,\r\n          repos: platform_data.repos,\r\n        });\r\n        intel\r\n        .fill(sources)\r\n        .then(async () => {\r\n          intel.calendar();\r\n          intel.stats();\r\n          intel.repos();\r\n        })\r\n        .then( async () => {\r\n          this.setState({\r\n            logged: true,\r\n            contrib: intel.stats(),\r\n            contribCalendar: intel.calendar(),\r\n            contribTypes: intel.contribTypes(),\r\n            user: intel.user(),\r\n            orgs: intel.orgs(),\r\n            languages: intel.languages(),\r\n            repos: intel.repos(),\r\n          });\r\n        })\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      //> Troubleshooting Point 6\r\n      // Database error message @ Saving generated user data (App.js)\r\n      //console.warn(TSID6, error.message);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"flyout\">\r\n          <Navbar \r\n          changeState={this.handleChangeState}\r\n          data={this.state}\r\n          />\r\n          <main>\r\n            <Routes \r\n            data={this.state}\r\n            changeState={this.handleChangeState}\r\n            login={this.handleLogin}\r\n            />\r\n          </main>\r\n          <Footer />\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\n// Graphql-Server is engine.snek.at/api/graphiql\r\nexport default compose(\r\n  graphql(VERIFY_TOKEN, { name: \"verify\" }),\r\n  graphql(REFRESH_TOKEN, { name: \"refresh\" }),\r\n  graphql(LOGIN_USER, { name: \"login\" }),\r\n)(withApollo(App));\r\n\r\n/**\r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              //console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              //console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      //console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      //console.log(\"No internet connection found. App is running in offline mode.\");\r\n    });\r\n}\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n","//> React\r\n// Contains all the functionality necessary to define React components\r\nimport React from \"react\";\r\n// This serves as an entry point to the DOM and server renderers for React\r\nimport ReactDOM from \"react-dom\";\r\n\r\n//> Font Awesome\r\n// Font Awesome is an awesome icon library\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\n\r\n//> Bootstrap\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\n\r\n//> Typist css\r\nimport \"react-typist/dist/Typist.css\";\r\n\r\n//> MDB\r\n// \"Material Design for Bootstrap\" is a great UI design framework\r\nimport \"mdbreact/dist/css/mdb.css\";\r\n\r\n//> CSS\r\n// Root SCSS file\r\nimport \"./index.scss\";\r\n\r\n//> Apollo\r\nimport { ApolloClient } from \"apollo-client\";\r\nimport { createHttpLink } from \"apollo-link-http\";\r\nimport { setContext } from \"apollo-link-context\";\r\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\r\nimport { ApolloProvider } from \"react-apollo\";\r\n\r\n//> Components\r\n// Root component\r\nimport App from \"./App\";\r\n\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\n\r\n// API Link\r\nconst httpLink = createHttpLink({\r\n  uri: \"https://engine.snek.at/api/graphiql\"\r\n});\r\n\r\n// Apollo Client\r\nconst client = new ApolloClient({\r\n  link: httpLink,\r\n  cache: new InMemoryCache()\r\n});\r\n\r\n// Render the root component to <div id=\"root\"></div>\r\nReactDOM.render(\r\n  <ApolloProvider client={client}>\r\n    <App />\r\n  </ApolloProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nregisterServiceWorker();\r\n\r\n/**\r\n * SPDX-License-Identifier: (EUPL-1.2)\r\n * Copyright © 2019 Werbeagentur Christian Aichner\r\n */\r\n"],"sourceRoot":""}